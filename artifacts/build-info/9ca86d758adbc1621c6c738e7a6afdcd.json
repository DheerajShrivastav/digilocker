{"id":"9ca86d758adbc1621c6c738e7a6afdcd","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"contracts/DocCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n\nerror DocCollection_NotApprovedForMarketplace();\n\ncontract DocCollection is ReentrancyGuard {\n    struct Uploading {\n        uint256 title;\n        address owner;\n    }\n    mapping (address => mapping(uint256 => Uploading)) private s_uploads;\n\n    event DocUploaded(\n        address indexed owner,\n        address indexed docAddress,\n        uint256 indexed tokenId,\n        uint256 title\n    );\n\n\n    ///////////////////\n    ///main function///\n    ///////////////////\n\n    function uploadDoc(\n        address docAddress,\n        uint256 tokenId,\n        uint256 title\n    ) external {\n        IERC721 doc = IERC721(docAddress);\n        if (doc.getApproved(tokenId) != address(this)) {\n            revert  DocCollection_NotApprovedForMarketplace();         \n        }\n        s_uploads[docAddress][tokenId] = Uploading(title, msg.sender);\n        emit DocUploaded(msg.sender, docAddress, tokenId, title);\n\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/NftMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nerror NFTMarketplace_PriceMustBeAboveZero();\nerror NFTMarketplace_NotApprovedForMarketplace();\nerror NFTMarketplace_AlreadListed(address nftAddress, uint256 tokenId);\nerror NFTMarketplace_NotOwner();\n\ncontract NftMarketplace {\n    struct Listing {\n        uint256 price;\n        address seller;\n    }\n    event ItemListed(\n        address indexed seller,\n        address indexed nftAddress,\n        uint256 indexed tokenId,\n        uint256 price\n    );\n    mapping(address => mapping(uint256 => Listing)) private s_listing;\n    ///////////////\n    ///Modifiers///\n    ///////////////\n    modifier notListed(\n        address nftAddress,\n        uint256 tokenId,\n        address owner\n    ) {\n        Listing memory listing = s_listing[nftAddress][tokenId];\n        if (listing.price > 0) {\n            revert NFTMarketplace_AlreadListed(nftAddress, tokenId);\n        }\n        _;\n    }\n    modifier isOwner(\n        address nftAddress,\n        uint256 tokenId,\n        address spender\n    ) {\n        IERC721 nft = IERC721(nftAddress);\n        address owner = nft.ownerOf(tokenId);\n        if (spender != owner) {\n            revert NFTMarketplace_NotOwner();\n        }\n        _;\n    }\n\n    // main funtions\n    function listItem(\n        address nftAddress,\n        uint256 tokenId,\n        uint256 price\n    ) external notListed(nftAddress, tokenId, msg.sender) isOwner(nftAddress, tokenId, msg.sender) {\n        if (price <= 0) {\n            revert NFTMarketplace_PriceMustBeAboveZero();\n        }\n        IERC721 nft = IERC721(nftAddress);\n        if (nft.getApproved(tokenId) != address(this)) {\n            revert NFTMarketplace_NotApprovedForMarketplace();\n        }\n        s_listing[nftAddress][tokenId] = Listing(price, msg.sender);\n        emit ItemListed(msg.sender, nftAddress, tokenId, price);\n    }\n}\n\n\n// 23:58:23"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[39]},"id":40,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"122:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":39,"linearizedBaseContracts":[39],"name":"ReentrancyGuard","nameLocation":"891:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:0","nodeType":"VariableDeclaration","scope":39,"src":"1661:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:0","nodeType":"VariableDeclaration","scope":39,"src":"1708:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1768:7:0","nodeType":"VariableDeclaration","scope":39,"src":"1752:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1796:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1816:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1806:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1793:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1796:0:0"},"scope":39,"src":"1782:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"2236:421:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":22,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":23,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2336:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":21,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2317:63:0"},{"expression":{"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":28,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":29,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2465:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":31,"nodeType":"ExpressionStatement","src":"2455:18:0"},{"id":32,"nodeType":"PlaceholderStatement","src":"2484:1:0"},{"expression":{"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2628:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":34,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2638:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":36,"nodeType":"ExpressionStatement","src":"2628:22:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1841:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":38,"name":"nonReentrant","nameLocation":"2221:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2233:2:0"},"src":"2212:445:0","virtual":false,"visibility":"internal"}],"scope":40,"src":"873:1786:0","usedErrors":[]}],"src":"97:2563:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[167],"IERC721":[155]},"id":156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":41,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":42,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":156,"sourceUnit":168,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":44,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":167,"src":"271:7:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":155,"linearizedBaseContracts":[155,167],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":54,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":54,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":54,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":54,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":63,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":63,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":63,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":63,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":72,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":72,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":72,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":72,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":80,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":80,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":155,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":88,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":88,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":155,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":100,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"from","nameLocation":"1852:4:1","nodeType":"VariableDeclaration","scope":100,"src":"1844:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"to","nameLocation":"1874:2:1","nodeType":"VariableDeclaration","scope":100,"src":"1866:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":100,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"data","nameLocation":"1926:4:1","nodeType":"VariableDeclaration","scope":100,"src":"1911:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":96,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:1"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"1945:0:1"},"scope":155,"src":"1809:137:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1952:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"from","nameLocation":"2687:4:1","nodeType":"VariableDeclaration","scope":110,"src":"2679:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"to","nameLocation":"2709:2:1","nodeType":"VariableDeclaration","scope":110,"src":"2701:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:1","nodeType":"VariableDeclaration","scope":110,"src":"2721:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[],"src":"2751:0:1"},"scope":155,"src":"2644:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"2758:504:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"from","nameLocation":"3306:4:1","nodeType":"VariableDeclaration","scope":120,"src":"3298:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"to","nameLocation":"3328:2:1","nodeType":"VariableDeclaration","scope":120,"src":"3320:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:1","nodeType":"VariableDeclaration","scope":120,"src":"3340:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"3370:0:1"},"scope":155,"src":"3267:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"3377:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"to","nameLocation":"3859:2:1","nodeType":"VariableDeclaration","scope":128,"src":"3851:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:1","nodeType":"VariableDeclaration","scope":128,"src":"3863:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:1"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3888:0:1"},"scope":155,"src":"3834:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3895:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:1","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"operator","nameLocation":"4244:8:1","nodeType":"VariableDeclaration","scope":136,"src":"4236:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:1","nodeType":"VariableDeclaration","scope":136,"src":"4254:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":132,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"4278:0:1"},"scope":155,"src":"4209:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"4285:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:1","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:1","nodeType":"VariableDeclaration","scope":144,"src":"4450:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:1"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"operator","nameLocation":"4498:8:1","nodeType":"VariableDeclaration","scope":144,"src":"4490:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:1"},"scope":155,"src":"4429:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"4514:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"owner","nameLocation":"4691:5:1","nodeType":"VariableDeclaration","scope":154,"src":"4683:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"operator","nameLocation":"4706:8:1","nodeType":"VariableDeclaration","scope":154,"src":"4698:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:1"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":154,"src":"4739:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":151,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:1"},"scope":155,"src":"4657:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":156,"src":"250:4497:1","usedErrors":[]}],"src":"108:4640:1"},"id":1},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":157,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"125:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167],"name":"IERC165","nameLocation":"415:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"429:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:2","nodeType":"VariableDeclaration","scope":166,"src":"801:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":160,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":163,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:2"},"scope":167,"src":"774:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"405:447:2","usedErrors":[]}],"src":"100:753:2"},"id":2},"contracts/DocCollection.sol":{"ast":{"absolutePath":"contracts/DocCollection.sol","exportedSymbols":{"DocCollection":[250],"DocCollection_NotApprovedForMarketplace":[173],"IERC165":[167],"IERC721":[155],"ReentrancyGuard":[39]},"id":251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":251,"sourceUnit":156,"src":"57:58:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":251,"sourceUnit":40,"src":"116:62:3","symbolAliases":[],"unitAlias":""},{"id":173,"name":"DocCollection_NotApprovedForMarketplace","nameLocation":"187:39:3","nodeType":"ErrorDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"226:2:3"},"src":"181:48:3"},{"abstract":false,"baseContracts":[{"baseName":{"id":174,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":39,"src":"257:15:3"},"id":175,"nodeType":"InheritanceSpecifier","src":"257:15:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":250,"linearizedBaseContracts":[250,39],"name":"DocCollection","nameLocation":"240:13:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DocCollection.Uploading","id":180,"members":[{"constant":false,"id":177,"mutability":"mutable","name":"title","nameLocation":"314:5:3","nodeType":"VariableDeclaration","scope":180,"src":"306:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"owner","nameLocation":"337:5:3","nodeType":"VariableDeclaration","scope":180,"src":"329:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"329:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Uploading","nameLocation":"286:9:3","nodeType":"StructDefinition","scope":250,"src":"279:70:3","visibility":"public"},{"constant":false,"id":187,"mutability":"mutable","name":"s_uploads","nameLocation":"413:9:3","nodeType":"VariableDeclaration","scope":250,"src":"354:68:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$180_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))"},"typeName":{"id":186,"keyType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"363:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"354:50:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$180_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))"},"valueType":{"id":185,"keyType":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"382:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"374:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$180_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading)"},"valueType":{"id":184,"nodeType":"UserDefinedTypeName","pathNode":{"id":183,"name":"Uploading","nodeType":"IdentifierPath","referencedDeclaration":180,"src":"393:9:3"},"referencedDeclaration":180,"src":"393:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$180_storage_ptr","typeString":"struct DocCollection.Uploading"}}}},"visibility":"private"},{"anonymous":false,"id":197,"name":"DocUploaded","nameLocation":"435:11:3","nodeType":"EventDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"472:5:3","nodeType":"VariableDeclaration","scope":197,"src":"456:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":191,"indexed":true,"mutability":"mutable","name":"docAddress","nameLocation":"503:10:3","nodeType":"VariableDeclaration","scope":197,"src":"487:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":193,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"539:7:3","nodeType":"VariableDeclaration","scope":197,"src":"523:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"564:5:3","nodeType":"VariableDeclaration","scope":197,"src":"556:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:129:3"},"src":"429:147:3"},{"body":{"id":248,"nodeType":"Block","src":"766:327:3","statements":[{"assignments":[209],"declarations":[{"constant":false,"id":209,"mutability":"mutable","name":"doc","nameLocation":"784:3:3","nodeType":"VariableDeclaration","scope":248,"src":"776:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"},"typeName":{"id":208,"nodeType":"UserDefinedTypeName","pathNode":{"id":207,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"776:7:3"},"referencedDeclaration":155,"src":"776:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"visibility":"internal"}],"id":213,"initialValue":{"arguments":[{"id":211,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"798:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":210,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"790:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$155_$","typeString":"type(contract IERC721)"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"790:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"776:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":216,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"839:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":214,"name":"doc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"823:3:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":144,"src":"823:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"823:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":220,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"859:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_DocCollection_$250","typeString":"contract DocCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DocCollection_$250","typeString":"contract DocCollection"}],"id":219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"851:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:3","typeDescriptions":{}}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"851:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"823:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"819:130:3","trueBody":{"id":226,"nodeType":"Block","src":"866:83:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"DocCollection_NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"888:39:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"888:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"RevertStatement","src":"880:49:3"}]}},{"expression":{"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":228,"name":"s_uploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"958:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$180_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading storage ref))"}},"id":231,"indexExpression":{"id":229,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"968:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"958:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$180_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading storage ref)"}},"id":232,"indexExpression":{"id":230,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"980:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"958:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$180_storage","typeString":"struct DocCollection.Uploading storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":234,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1001:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1008:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1008:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":233,"name":"Uploading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"991:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Uploading_$180_storage_ptr_$","typeString":"type(struct DocCollection.Uploading storage pointer)"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$180_memory_ptr","typeString":"struct DocCollection.Uploading memory"}},"src":"958:61:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$180_storage","typeString":"struct DocCollection.Uploading storage ref"}},"id":239,"nodeType":"ExpressionStatement","src":"958:61:3"},{"eventCall":{"arguments":[{"expression":{"id":241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1046:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1046:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":243,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"1058:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"1070:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":245,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1079:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":240,"name":"DocUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"1034:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1034:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"1029:56:3"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"607:19:3","text":"main function///"},"functionSelector":"c1fe8caa","id":249,"implemented":true,"kind":"function","modifiers":[],"name":"uploadDoc","nameLocation":"665:9:3","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"docAddress","nameLocation":"692:10:3","nodeType":"VariableDeclaration","scope":249,"src":"684:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"tokenId","nameLocation":"720:7:3","nodeType":"VariableDeclaration","scope":249,"src":"712:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"title","nameLocation":"745:5:3","nodeType":"VariableDeclaration","scope":249,"src":"737:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"737:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:82:3"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"766:0:3"},"scope":250,"src":"656:437:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":251,"src":"231:864:3","usedErrors":[173]}],"src":"32:1064:3"},"id":3},"contracts/NftMarketplace.sol":{"ast":{"absolutePath":"contracts/NftMarketplace.sol","exportedSymbols":{"IERC165":[167],"IERC721":[155],"NFTMarketplace_AlreadListed":[263],"NFTMarketplace_NotApprovedForMarketplace":[257],"NFTMarketplace_NotOwner":[265],"NFTMarketplace_PriceMustBeAboveZero":[255],"NftMarketplace":[422]},"id":423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":252,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":423,"sourceUnit":156,"src":"57:58:4","symbolAliases":[],"unitAlias":""},{"id":255,"name":"NFTMarketplace_PriceMustBeAboveZero","nameLocation":"123:35:4","nodeType":"ErrorDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"158:2:4"},"src":"117:44:4"},{"id":257,"name":"NFTMarketplace_NotApprovedForMarketplace","nameLocation":"168:40:4","nodeType":"ErrorDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"208:2:4"},"src":"162:49:4"},{"id":263,"name":"NFTMarketplace_AlreadListed","nameLocation":"218:27:4","nodeType":"ErrorDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"nftAddress","nameLocation":"254:10:4","nodeType":"VariableDeclaration","scope":263,"src":"246:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"246:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"tokenId","nameLocation":"274:7:4","nodeType":"VariableDeclaration","scope":263,"src":"266:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"266:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:37:4"},"src":"212:71:4"},{"id":265,"name":"NFTMarketplace_NotOwner","nameLocation":"290:23:4","nodeType":"ErrorDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"313:2:4"},"src":"284:32:4"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":422,"linearizedBaseContracts":[422],"name":"NftMarketplace","nameLocation":"327:14:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NftMarketplace.Listing","id":270,"members":[{"constant":false,"id":267,"mutability":"mutable","name":"price","nameLocation":"381:5:4","nodeType":"VariableDeclaration","scope":270,"src":"373:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"seller","nameLocation":"404:6:4","nodeType":"VariableDeclaration","scope":270,"src":"396:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Listing","nameLocation":"355:7:4","nodeType":"StructDefinition","scope":422,"src":"348:69:4","visibility":"public"},{"anonymous":false,"id":280,"name":"ItemListed","nameLocation":"428:10:4","nodeType":"EventDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"464:6:4","nodeType":"VariableDeclaration","scope":280,"src":"448:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":274,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"496:10:4","nodeType":"VariableDeclaration","scope":280,"src":"480:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"480:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":276,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"532:7:4","nodeType":"VariableDeclaration","scope":280,"src":"516:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":278,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"557:5:4","nodeType":"VariableDeclaration","scope":280,"src":"549:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:130:4"},"src":"422:147:4"},{"constant":false,"id":287,"mutability":"mutable","name":"s_listing","nameLocation":"630:9:4","nodeType":"VariableDeclaration","scope":422,"src":"574:65:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"typeName":{"id":286,"keyType":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"582:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"574:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"valueType":{"id":285,"keyType":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"593:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing)"},"valueType":{"id":284,"nodeType":"UserDefinedTypeName","pathNode":{"id":283,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"612:7:4"},"referencedDeclaration":270,"src":"612:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_storage_ptr","typeString":"struct NftMarketplace.Listing"}}}},"visibility":"private"},{"body":{"id":317,"nodeType":"Block","src":"806:195:4","statements":[{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"listing","nameLocation":"831:7:4","nodeType":"VariableDeclaration","scope":317,"src":"816:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":297,"nodeType":"UserDefinedTypeName","pathNode":{"id":296,"name":"Listing","nodeType":"IdentifierPath","referencedDeclaration":270,"src":"816:7:4"},"referencedDeclaration":270,"src":"816:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":304,"initialValue":{"baseExpression":{"baseExpression":{"id":299,"name":"s_listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"841:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":301,"indexExpression":{"id":300,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"851:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"841:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":303,"indexExpression":{"id":302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"841:30:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"816:55:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":305,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"885:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"price","nodeType":"MemberAccess","referencedDeclaration":267,"src":"885:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"885:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"881:103:4","trueBody":{"id":314,"nodeType":"Block","src":"904:80:4","statements":[{"errorCall":{"arguments":[{"id":310,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"953:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":311,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"965:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":309,"name":"NFTMarketplace_AlreadListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"925:27:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"925:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"918:55:4"}]}},{"id":316,"nodeType":"PlaceholderStatement","src":"993:1:4"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"665:15:4","text":"Modifiers///"},"id":318,"name":"notListed","nameLocation":"714:9:4","nodeType":"ModifierDefinition","parameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"nftAddress","nameLocation":"741:10:4","nodeType":"VariableDeclaration","scope":318,"src":"733:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"tokenId","nameLocation":"769:7:4","nodeType":"VariableDeclaration","scope":318,"src":"761:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"owner","nameLocation":"794:5:4","nodeType":"VariableDeclaration","scope":318,"src":"786:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"723:82:4"},"src":"705:296:4","virtual":false,"visibility":"internal"},{"body":{"id":349,"nodeType":"Block","src":"1107:195:4","statements":[{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"nft","nameLocation":"1125:3:4","nodeType":"VariableDeclaration","scope":349,"src":"1117:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"},"typeName":{"id":327,"nodeType":"UserDefinedTypeName","pathNode":{"id":326,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"1117:7:4"},"referencedDeclaration":155,"src":"1117:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[{"id":330,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1139:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":329,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1131:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$155_$","typeString":"type(contract IERC721)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1131:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1117:33:4"},{"assignments":[334],"declarations":[{"constant":false,"id":334,"mutability":"mutable","name":"owner","nameLocation":"1168:5:4","nodeType":"VariableDeclaration","scope":349,"src":"1160:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1160:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":339,"initialValue":{"arguments":[{"id":337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1188:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":335,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1176:3:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":88,"src":"1176:11:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1176:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1160:36:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1210:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":341,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1221:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1210:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"IfStatement","src":"1206:79:4","trueBody":{"id":346,"nodeType":"Block","src":"1228:57:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":343,"name":"NFTMarketplace_NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1249:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"RevertStatement","src":"1242:32:4"}]}},{"id":348,"nodeType":"PlaceholderStatement","src":"1294:1:4"}]},"id":350,"name":"isOwner","nameLocation":"1015:7:4","nodeType":"ModifierDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"nftAddress","nameLocation":"1040:10:4","nodeType":"VariableDeclaration","scope":350,"src":"1032:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"tokenId","nameLocation":"1068:7:4","nodeType":"VariableDeclaration","scope":350,"src":"1060:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"spender","nameLocation":"1093:7:4","nodeType":"VariableDeclaration","scope":350,"src":"1085:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1022:84:4"},"src":"1006:296:4","virtual":false,"visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"1522:408:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1536:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1545:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1536:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":378,"nodeType":"IfStatement","src":"1532:85:4","trueBody":{"id":377,"nodeType":"Block","src":"1548:69:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":374,"name":"NFTMarketplace_PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1569:35:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1569:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"RevertStatement","src":"1562:44:4"}]}},{"assignments":[381],"declarations":[{"constant":false,"id":381,"mutability":"mutable","name":"nft","nameLocation":"1634:3:4","nodeType":"VariableDeclaration","scope":420,"src":"1626:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"},"typeName":{"id":380,"nodeType":"UserDefinedTypeName","pathNode":{"id":379,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"1626:7:4"},"referencedDeclaration":155,"src":"1626:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"visibility":"internal"}],"id":385,"initialValue":{"arguments":[{"id":383,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1648:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":382,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1640:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$155_$","typeString":"type(contract IERC721)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1640:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1626:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1689:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":386,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"1673:3:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":144,"src":"1673:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1673:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":392,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1709:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_NftMarketplace_$422","typeString":"contract NftMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftMarketplace_$422","typeString":"contract NftMarketplace"}],"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1701:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"1701:7:4","typeDescriptions":{}}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1701:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1673:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"IfStatement","src":"1669:121:4","trueBody":{"id":398,"nodeType":"Block","src":"1716:74:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"NFTMarketplace_NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1737:40:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"RevertStatement","src":"1730:49:4"}]}},{"expression":{"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":400,"name":"s_listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1799:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":403,"indexExpression":{"id":401,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1809:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1799:21:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$270_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":404,"indexExpression":{"id":402,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1799:30:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":406,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1840:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":407,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1847:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1847:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":405,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1832:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$270_storage_ptr_$","typeString":"type(struct NftMarketplace.Listing storage pointer)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1832:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"src":"1799:59:4","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$270_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":411,"nodeType":"ExpressionStatement","src":"1799:59:4"},{"eventCall":{"arguments":[{"expression":{"id":413,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1884:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1884:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1896:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":416,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1908:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":417,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"1917:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1873:10:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1873:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":419,"nodeType":"EmitStatement","src":"1868:55:4"}]},"functionSelector":"89bfd38f","id":421,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":359,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1448:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1460:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1469:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1469:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":363,"kind":"modifierInvocation","modifierName":{"id":358,"name":"notListed","nodeType":"IdentifierPath","referencedDeclaration":318,"src":"1438:9:4"},"nodeType":"ModifierInvocation","src":"1438:42:4"},{"arguments":[{"id":365,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1489:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1501:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1510:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1510:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":369,"kind":"modifierInvocation","modifierName":{"id":364,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":350,"src":"1481:7:4"},"nodeType":"ModifierInvocation","src":"1481:40:4"}],"name":"listItem","nameLocation":"1338:8:4","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"nftAddress","nameLocation":"1364:10:4","nodeType":"VariableDeclaration","scope":421,"src":"1356:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"tokenId","nameLocation":"1392:7:4","nodeType":"VariableDeclaration","scope":421,"src":"1384:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1384:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"price","nameLocation":"1417:5:4","nodeType":"VariableDeclaration","scope":421,"src":"1409:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1346:82:4"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1522:0:4"},"scope":422,"src":"1329:601:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":423,"src":"318:1614:4","usedErrors":[255,257,263,265]}],"src":"32:1914:4"},"id":4}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DocCollection.sol":{"DocCollection":{"abi":[{"inputs":[],"name":"DocCollection_NotApprovedForMarketplace","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"docAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"title","type":"uint256"}],"name":"DocUploaded","type":"event"},{"inputs":[{"internalType":"address","name":"docAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"title","type":"uint256"}],"name":"uploadDoc","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600081905550610407806100286000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c1fe8caa14610030575b600080fd5b61004a600480360381019061004591906102e5565b61004c565b005b60008390503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b81526004016100a19190610347565b60206040518083038186803b1580156100b957600080fd5b505afa1580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f191906102b8565b73ffffffffffffffffffffffffffffffffffffffff161461013e576040517f8ae97c5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f07c2a6503a59242c5023041d072b3c429a0e48608aa6ac5b98e86d4e5f9af0268560405161026b9190610347565b60405180910390a450505050565b600081359050610288816103a3565b92915050565b60008151905061029d816103a3565b92915050565b6000813590506102b2816103ba565b92915050565b6000602082840312156102ce576102cd61039e565b5b60006102dc8482850161028e565b91505092915050565b6000806000606084860312156102fe576102fd61039e565b5b600061030c86828701610279565b935050602061031d868287016102a3565b925050604061032e868287016102a3565b9150509250925092565b61034181610394565b82525050565b600060208201905061035c6000830184610338565b92915050565b600061036d82610374565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6103ac81610362565b81146103b757600080fd5b50565b6103c381610394565b81146103ce57600080fd5b5056fea26469706673582212205fbf14a793e4d4ae38ac50242e9de956fb1b041168843c13e36884cf1567f78764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x407 DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1FE8CAA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AE97C5800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C2A6503A59242C5023041D072B3C429A0E48608AA6AC5B98E86D4E5F9AF026 DUP6 PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x288 DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2 DUP2 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0x39E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP5 DUP3 DUP6 ADD PUSH2 0x28E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x39E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP7 DUP3 DUP8 ADD PUSH2 0x279 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31D DUP7 DUP3 DUP8 ADD PUSH2 0x2A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x32E DUP7 DUP3 DUP8 ADD PUSH2 0x2A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x341 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x338 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D DUP3 PUSH2 0x374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x362 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xBF EQ 0xA7 SWAP4 0xE4 0xD4 0xAE CODESIZE 0xAC POP 0x24 0x2E SWAP14 0xE9 JUMP 0xFB SHL DIV GT PUSH9 0x843C13E36884CF1567 0xF7 DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"231:864:3:-:0;;;;;;;;;;;;;1701:1:0;1806:7;:22;;;;231:864:3;;;;;;"},"deployedBytecode":{"functionDebugData":{"@uploadDoc_249":{"entryPoint":76,"id":249,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":741,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":824,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":839,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":866,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":884,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":926,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":931,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":954,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2677:5","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:5","statements":[{"nodeType":"YulAssignment","src":"69:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:5"},"nodeType":"YulFunctionCall","src":"78:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:5"},"nodeType":"YulFunctionCall","src":"107:33:5"},"nodeType":"YulExpressionStatement","src":"107:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:5","type":""}],"src":"7:139:5"},{"body":{"nodeType":"YulBlock","src":"215:80:5","statements":[{"nodeType":"YulAssignment","src":"225:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"240:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234:5:5"},"nodeType":"YulFunctionCall","src":"234:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"283:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"256:26:5"},"nodeType":"YulFunctionCall","src":"256:33:5"},"nodeType":"YulExpressionStatement","src":"256:33:5"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"193:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"201:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"209:5:5","type":""}],"src":"152:143:5"},{"body":{"nodeType":"YulBlock","src":"353:87:5","statements":[{"nodeType":"YulAssignment","src":"363:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"372:12:5"},"nodeType":"YulFunctionCall","src":"372:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"363:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:5"},"nodeType":"YulFunctionCall","src":"401:33:5"},"nodeType":"YulExpressionStatement","src":"401:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"331:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"339:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:5","type":""}],"src":"301:139:5"},{"body":{"nodeType":"YulBlock","src":"523:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"569:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"571:77:5"},"nodeType":"YulFunctionCall","src":"571:79:5"},"nodeType":"YulExpressionStatement","src":"571:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"544:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"540:3:5"},"nodeType":"YulFunctionCall","src":"540:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"565:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"536:3:5"},"nodeType":"YulFunctionCall","src":"536:32:5"},"nodeType":"YulIf","src":"533:119:5"},{"nodeType":"YulBlock","src":"662:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"677:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"691:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"681:6:5","type":""}]},{"nodeType":"YulAssignment","src":"706:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"763:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:5"},"nodeType":"YulFunctionCall","src":"748:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"772:7:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"716:31:5"},"nodeType":"YulFunctionCall","src":"716:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"493:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"504:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"516:6:5","type":""}],"src":"446:351:5"},{"body":{"nodeType":"YulBlock","src":"903:519:5","statements":[{"body":{"nodeType":"YulBlock","src":"949:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"951:77:5"},"nodeType":"YulFunctionCall","src":"951:79:5"},"nodeType":"YulExpressionStatement","src":"951:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"924:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"920:3:5"},"nodeType":"YulFunctionCall","src":"920:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"916:3:5"},"nodeType":"YulFunctionCall","src":"916:32:5"},"nodeType":"YulIf","src":"913:119:5"},{"nodeType":"YulBlock","src":"1042:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1057:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1071:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1061:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1086:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:5"},"nodeType":"YulFunctionCall","src":"1117:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1141:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1096:20:5"},"nodeType":"YulFunctionCall","src":"1096:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1086:6:5"}]}]},{"nodeType":"YulBlock","src":"1169:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1198:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1188:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1214:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1249:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1260:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1245:3:5"},"nodeType":"YulFunctionCall","src":"1245:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1269:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1224:20:5"},"nodeType":"YulFunctionCall","src":"1224:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1214:6:5"}]}]},{"nodeType":"YulBlock","src":"1297:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1312:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1326:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1316:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1342:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1377:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1388:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1373:3:5"},"nodeType":"YulFunctionCall","src":"1373:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1397:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1352:20:5"},"nodeType":"YulFunctionCall","src":"1352:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1342:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"857:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"868:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"880:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"888:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"896:6:5","type":""}],"src":"803:619:5"},{"body":{"nodeType":"YulBlock","src":"1493:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1510:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1533:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1515:17:5"},"nodeType":"YulFunctionCall","src":"1515:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1503:6:5"},"nodeType":"YulFunctionCall","src":"1503:37:5"},"nodeType":"YulExpressionStatement","src":"1503:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1481:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1488:3:5","type":""}],"src":"1428:118:5"},{"body":{"nodeType":"YulBlock","src":"1650:124:5","statements":[{"nodeType":"YulAssignment","src":"1660:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1672:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1683:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1668:3:5"},"nodeType":"YulFunctionCall","src":"1668:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1660:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1740:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1753:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1764:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1749:3:5"},"nodeType":"YulFunctionCall","src":"1749:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1696:43:5"},"nodeType":"YulFunctionCall","src":"1696:71:5"},"nodeType":"YulExpressionStatement","src":"1696:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1622:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1634:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1645:4:5","type":""}],"src":"1552:222:5"},{"body":{"nodeType":"YulBlock","src":"1820:35:5","statements":[{"nodeType":"YulAssignment","src":"1830:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1840:5:5"},"nodeType":"YulFunctionCall","src":"1840:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1830:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1813:6:5","type":""}],"src":"1780:75:5"},{"body":{"nodeType":"YulBlock","src":"1906:51:5","statements":[{"nodeType":"YulAssignment","src":"1916:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1945:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1927:17:5"},"nodeType":"YulFunctionCall","src":"1927:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1916:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1888:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1898:7:5","type":""}],"src":"1861:96:5"},{"body":{"nodeType":"YulBlock","src":"2008:81:5","statements":[{"nodeType":"YulAssignment","src":"2018:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2033:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"2040:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2029:3:5"},"nodeType":"YulFunctionCall","src":"2029:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2018:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1990:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2000:7:5","type":""}],"src":"1963:126:5"},{"body":{"nodeType":"YulBlock","src":"2140:32:5","statements":[{"nodeType":"YulAssignment","src":"2150:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"2161:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2150:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2122:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2132:7:5","type":""}],"src":"2095:77:5"},{"body":{"nodeType":"YulBlock","src":"2267:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2284:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2287:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2277:6:5"},"nodeType":"YulFunctionCall","src":"2277:12:5"},"nodeType":"YulExpressionStatement","src":"2277:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2178:117:5"},{"body":{"nodeType":"YulBlock","src":"2390:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2407:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2400:6:5"},"nodeType":"YulFunctionCall","src":"2400:12:5"},"nodeType":"YulExpressionStatement","src":"2400:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2301:117:5"},{"body":{"nodeType":"YulBlock","src":"2467:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"2524:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2533:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2536:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2526:6:5"},"nodeType":"YulFunctionCall","src":"2526:12:5"},"nodeType":"YulExpressionStatement","src":"2526:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2490:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2515:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2497:17:5"},"nodeType":"YulFunctionCall","src":"2497:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2487:2:5"},"nodeType":"YulFunctionCall","src":"2487:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2480:6:5"},"nodeType":"YulFunctionCall","src":"2480:43:5"},"nodeType":"YulIf","src":"2477:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2460:5:5","type":""}],"src":"2424:122:5"},{"body":{"nodeType":"YulBlock","src":"2595:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"2652:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2661:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2664:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2654:6:5"},"nodeType":"YulFunctionCall","src":"2654:12:5"},"nodeType":"YulExpressionStatement","src":"2654:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2618:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2643:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2625:17:5"},"nodeType":"YulFunctionCall","src":"2625:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2615:2:5"},"nodeType":"YulFunctionCall","src":"2615:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2608:6:5"},"nodeType":"YulFunctionCall","src":"2608:43:5"},"nodeType":"YulIf","src":"2605:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:5","type":""}],"src":"2552:122:5"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c1fe8caa14610030575b600080fd5b61004a600480360381019061004591906102e5565b61004c565b005b60008390503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc856040518263ffffffff1660e01b81526004016100a19190610347565b60206040518083038186803b1580156100b957600080fd5b505afa1580156100cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f191906102b8565b73ffffffffffffffffffffffffffffffffffffffff161461013e576040517f8ae97c5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f07c2a6503a59242c5023041d072b3c429a0e48608aa6ac5b98e86d4e5f9af0268560405161026b9190610347565b60405180910390a450505050565b600081359050610288816103a3565b92915050565b60008151905061029d816103a3565b92915050565b6000813590506102b2816103ba565b92915050565b6000602082840312156102ce576102cd61039e565b5b60006102dc8482850161028e565b91505092915050565b6000806000606084860312156102fe576102fd61039e565b5b600061030c86828701610279565b935050602061031d868287016102a3565b925050604061032e868287016102a3565b9150509250925092565b61034181610394565b82525050565b600060208201905061035c6000830184610338565b92915050565b600061036d82610374565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6103ac81610362565b81146103b757600080fd5b50565b6103c381610394565b81146103ce57600080fd5b5056fea26469706673582212205fbf14a793e4d4ae38ac50242e9de956fb1b041168843c13e36884cf1567f78764736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC1FE8CAA EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0x2B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AE97C5800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C2A6503A59242C5023041D072B3C429A0E48608AA6AC5B98E86D4E5F9AF026 DUP6 PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x288 DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x29D DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B2 DUP2 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CE JUMPI PUSH2 0x2CD PUSH2 0x39E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DC DUP5 DUP3 DUP6 ADD PUSH2 0x28E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2FE JUMPI PUSH2 0x2FD PUSH2 0x39E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C DUP7 DUP3 DUP8 ADD PUSH2 0x279 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31D DUP7 DUP3 DUP8 ADD PUSH2 0x2A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x32E DUP7 DUP3 DUP8 ADD PUSH2 0x2A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x341 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x338 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D DUP3 PUSH2 0x374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x362 JUMP JUMPDEST DUP2 EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP2 EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xBF EQ 0xA7 SWAP4 0xE4 0xD4 0xAE CODESIZE 0xAC POP 0x24 0x2E SWAP14 0xE9 JUMP 0xFB SHL DIV GT PUSH9 0x843C13E36884CF1567 0xF7 DUP8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"231:864:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;656:437;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;776:11;798:10;776:33;;859:4;823:41;;:3;:15;;;839:7;823:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;819:130;;888:41;;;;;;;;;;;;;;819:130;991:28;;;;;;;;1001:5;991:28;;;;1008:10;991:28;;;;;958:9;:21;968:10;958:21;;;;;;;;;;;;;;;:30;980:7;958:30;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1070:7;1058:10;1034:51;;1046:10;1034:51;;;1079:5;1034:51;;;;;;:::i;:::-;;;;;;;;766:327;656:437;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:139::-;347:5;385:6;372:20;363:29;;401:33;428:5;401:33;:::i;:::-;301:139;;;;:::o;446:351::-;516:6;565:2;553:9;544:7;540:23;536:32;533:119;;;571:79;;:::i;:::-;533:119;691:1;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;662:128;446:351;;;;:::o;803:619::-;880:6;888;896;945:2;933:9;924:7;920:23;916:32;913:119;;;951:79;;:::i;:::-;913:119;1071:1;1096:53;1141:7;1132:6;1121:9;1117:22;1096:53;:::i;:::-;1086:63;;1042:117;1198:2;1224:53;1269:7;1260:6;1249:9;1245:22;1224:53;:::i;:::-;1214:63;;1169:118;1326:2;1352:53;1397:7;1388:6;1377:9;1373:22;1352:53;:::i;:::-;1342:63;;1297:118;803:619;;;;;:::o;1428:118::-;1515:24;1533:5;1515:24;:::i;:::-;1510:3;1503:37;1428:118;;:::o;1552:222::-;1645:4;1683:2;1672:9;1668:18;1660:26;;1696:71;1764:1;1753:9;1749:17;1740:6;1696:71;:::i;:::-;1552:222;;;;:::o;1861:96::-;1898:7;1927:24;1945:5;1927:24;:::i;:::-;1916:35;;1861:96;;;:::o;1963:126::-;2000:7;2040:42;2033:5;2029:54;2018:65;;1963:126;;;:::o;2095:77::-;2132:7;2161:5;2150:16;;2095:77;;;:::o;2301:117::-;2410:1;2407;2400:12;2424:122;2497:24;2515:5;2497:24;:::i;:::-;2490:5;2487:35;2477:63;;2536:1;2533;2526:12;2477:63;2424:122;:::o;2552:::-;2625:24;2643:5;2625:24;:::i;:::-;2618:5;2615:35;2605:63;;2664:1;2661;2654:12;2605:63;2552:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"206200","executionCost":"22365","totalCost":"228565"},"external":{"uploadDoc(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"uploadDoc(address,uint256,uint256)":"c1fe8caa"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DocCollection_NotApprovedForMarketplace\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"title\",\"type\":\"uint256\"}],\"name\":\"DocUploaded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"title\",\"type\":\"uint256\"}],\"name\":\"uploadDoc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uploadDoc(address,uint256,uint256)\":{\"notice\":\"main function///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DocCollection.sol\":\"DocCollection\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/DocCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\n\\nerror DocCollection_NotApprovedForMarketplace();\\n\\ncontract DocCollection is ReentrancyGuard {\\n    struct Uploading {\\n        uint256 title;\\n        address owner;\\n    }\\n    mapping (address => mapping(uint256 => Uploading)) private s_uploads;\\n\\n    event DocUploaded(\\n        address indexed owner,\\n        address indexed docAddress,\\n        uint256 indexed tokenId,\\n        uint256 title\\n    );\\n\\n\\n    ///////////////////\\n    ///main function///\\n    ///////////////////\\n\\n    function uploadDoc(\\n        address docAddress,\\n        uint256 tokenId,\\n        uint256 title\\n    ) external {\\n        IERC721 doc = IERC721(docAddress);\\n        if (doc.getApproved(tokenId) != address(this)) {\\n            revert  DocCollection_NotApprovedForMarketplace();         \\n        }\\n        s_uploads[docAddress][tokenId] = Uploading(title, msg.sender);\\n        emit DocUploaded(msg.sender, docAddress, tokenId, title);\\n\\n    }\\n}\\n\",\"keccak256\":\"0xdaf9c4279dd8d9e33b1011de7719643539b2da3918dc4ccfebcb9f71bec3820f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/DocCollection.sol:DocCollection","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":187,"contract":"contracts/DocCollection.sol:DocCollection","label":"s_uploads","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Uploading)180_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Uploading)180_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Uploading)180_storage)"},"t_mapping(t_uint256,t_struct(Uploading)180_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DocCollection.Uploading)","numberOfBytes":"32","value":"t_struct(Uploading)180_storage"},"t_struct(Uploading)180_storage":{"encoding":"inplace","label":"struct DocCollection.Uploading","members":[{"astId":177,"contract":"contracts/DocCollection.sol:DocCollection","label":"title","offset":0,"slot":"0","type":"t_uint256"},{"astId":179,"contract":"contracts/DocCollection.sol:DocCollection","label":"owner","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"uploadDoc(address,uint256,uint256)":{"notice":"main function///"}},"version":1}}},"contracts/NftMarketplace.sol":{"NftMarketplace":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NFTMarketplace_AlreadListed","type":"error"},{"inputs":[],"name":"NFTMarketplace_NotApprovedForMarketplace","type":"error"},{"inputs":[],"name":"NFTMarketplace_NotOwner","type":"error"},{"inputs":[],"name":"NFTMarketplace_PriceMustBeAboveZero","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemListed","type":"event"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"listItem","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50610688806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806389bfd38f14610030575b600080fd5b61004a6004803603810190610045919061052e565b61004c565b005b82823360008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156101595783836040517f7d3c58e200000000000000000000000000000000000000000000000000000000815260040161015092919061059f565b60405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161019c91906105c8565b60206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec9190610501565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610253576040517fa04f072600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a1161028d576040517f3646701500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b81526004016102e291906105c8565b60206040518083038186803b1580156102fa57600080fd5b505afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610501565b73ffffffffffffffffffffffffffffffffffffffff161461037f576040517f5740a1c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508b8d73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e6040516104ab91906105c8565b60405180910390a450505050505050505050505050565b6000813590506104d181610624565b92915050565b6000815190506104e681610624565b92915050565b6000813590506104fb8161063b565b92915050565b6000602082840312156105175761051661061f565b5b6000610525848285016104d7565b91505092915050565b6000806000606084860312156105475761054661061f565b5b6000610555868287016104c2565b9350506020610566868287016104ec565b9250506040610577868287016104ec565b9150509250925092565b61058a816105e3565b82525050565b61059981610615565b82525050565b60006040820190506105b46000830185610581565b6105c16020830184610590565b9392505050565b60006020820190506105dd6000830184610590565b92915050565b60006105ee826105f5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61062d816105e3565b811461063857600080fd5b50565b61064481610615565b811461064f57600080fd5b5056fea26469706673582212201e1567c7973cb7a5363ded6c3cd3d5fc414652c3b2eb0b4001cc88df075ecaf364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x688 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x159 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0x7D3C58E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP3 SWAP2 SWAP1 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA04F072600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3646701500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5740A1C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP15 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D1 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E6 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FB DUP2 PUSH2 0x63B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x517 JUMPI PUSH2 0x516 PUSH2 0x61F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP5 DUP3 DUP6 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x61F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x555 DUP7 DUP3 DUP8 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x566 DUP7 DUP3 DUP8 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x577 DUP7 DUP3 DUP8 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x58A DUP2 PUSH2 0x5E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x590 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x5E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x615 JUMP JUMPDEST DUP2 EQ PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E ISZERO PUSH8 0xC7973CB7A5363DED PUSH13 0x3CD3D5FC414652C3B2EB0B4001 0xCC DUP9 0xDF SMOD 0x5E 0xCA RETURN PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"318:1614:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@listItem_421":{"entryPoint":76,"id":421,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":1281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":1326,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1424,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":1439,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":1480,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":1507,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1525,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1557,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1567,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1572,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1595,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3139:5","statements":[{"body":{"nodeType":"YulBlock","src":"59:87:5","statements":[{"nodeType":"YulAssignment","src":"69:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"91:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"78:12:5"},"nodeType":"YulFunctionCall","src":"78:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"69:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"134:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"107:26:5"},"nodeType":"YulFunctionCall","src":"107:33:5"},"nodeType":"YulExpressionStatement","src":"107:33:5"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"45:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:5","type":""}],"src":"7:139:5"},{"body":{"nodeType":"YulBlock","src":"215:80:5","statements":[{"nodeType":"YulAssignment","src":"225:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"240:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"234:5:5"},"nodeType":"YulFunctionCall","src":"234:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"225:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"283:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"256:26:5"},"nodeType":"YulFunctionCall","src":"256:33:5"},"nodeType":"YulExpressionStatement","src":"256:33:5"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"193:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"201:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"209:5:5","type":""}],"src":"152:143:5"},{"body":{"nodeType":"YulBlock","src":"353:87:5","statements":[{"nodeType":"YulAssignment","src":"363:29:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"385:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"372:12:5"},"nodeType":"YulFunctionCall","src":"372:20:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"363:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"428:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"401:26:5"},"nodeType":"YulFunctionCall","src":"401:33:5"},"nodeType":"YulExpressionStatement","src":"401:33:5"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"331:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"339:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"347:5:5","type":""}],"src":"301:139:5"},{"body":{"nodeType":"YulBlock","src":"523:274:5","statements":[{"body":{"nodeType":"YulBlock","src":"569:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"571:77:5"},"nodeType":"YulFunctionCall","src":"571:79:5"},"nodeType":"YulExpressionStatement","src":"571:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"544:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"553:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"540:3:5"},"nodeType":"YulFunctionCall","src":"540:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"565:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"536:3:5"},"nodeType":"YulFunctionCall","src":"536:32:5"},"nodeType":"YulIf","src":"533:119:5"},{"nodeType":"YulBlock","src":"662:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"677:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"691:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"681:6:5","type":""}]},{"nodeType":"YulAssignment","src":"706:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"763:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"748:3:5"},"nodeType":"YulFunctionCall","src":"748:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"772:7:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"716:31:5"},"nodeType":"YulFunctionCall","src":"716:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"706:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"493:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"504:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"516:6:5","type":""}],"src":"446:351:5"},{"body":{"nodeType":"YulBlock","src":"903:519:5","statements":[{"body":{"nodeType":"YulBlock","src":"949:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"951:77:5"},"nodeType":"YulFunctionCall","src":"951:79:5"},"nodeType":"YulExpressionStatement","src":"951:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"924:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"933:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"920:3:5"},"nodeType":"YulFunctionCall","src":"920:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"945:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"916:3:5"},"nodeType":"YulFunctionCall","src":"916:32:5"},"nodeType":"YulIf","src":"913:119:5"},{"nodeType":"YulBlock","src":"1042:117:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1057:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1071:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1061:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1086:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:5"},"nodeType":"YulFunctionCall","src":"1117:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1141:7:5"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1096:20:5"},"nodeType":"YulFunctionCall","src":"1096:53:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1086:6:5"}]}]},{"nodeType":"YulBlock","src":"1169:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1184:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1198:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1188:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1214:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1249:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1260:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1245:3:5"},"nodeType":"YulFunctionCall","src":"1245:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1269:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1224:20:5"},"nodeType":"YulFunctionCall","src":"1224:53:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1214:6:5"}]}]},{"nodeType":"YulBlock","src":"1297:118:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1312:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"1326:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1316:6:5","type":""}]},{"nodeType":"YulAssignment","src":"1342:63:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1377:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"1388:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1373:3:5"},"nodeType":"YulFunctionCall","src":"1373:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1397:7:5"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1352:20:5"},"nodeType":"YulFunctionCall","src":"1352:53:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1342:6:5"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"857:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"868:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"880:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"888:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"896:6:5","type":""}],"src":"803:619:5"},{"body":{"nodeType":"YulBlock","src":"1493:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1510:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1533:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1515:17:5"},"nodeType":"YulFunctionCall","src":"1515:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1503:6:5"},"nodeType":"YulFunctionCall","src":"1503:37:5"},"nodeType":"YulExpressionStatement","src":"1503:37:5"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1481:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1488:3:5","type":""}],"src":"1428:118:5"},{"body":{"nodeType":"YulBlock","src":"1617:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1634:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1657:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1639:17:5"},"nodeType":"YulFunctionCall","src":"1639:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1627:6:5"},"nodeType":"YulFunctionCall","src":"1627:37:5"},"nodeType":"YulExpressionStatement","src":"1627:37:5"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1605:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1612:3:5","type":""}],"src":"1552:118:5"},{"body":{"nodeType":"YulBlock","src":"1802:206:5","statements":[{"nodeType":"YulAssignment","src":"1812:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1824:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1835:2:5","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:5"},"nodeType":"YulFunctionCall","src":"1820:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1812:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1892:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1905:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1916:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1901:3:5"},"nodeType":"YulFunctionCall","src":"1901:17:5"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1848:43:5"},"nodeType":"YulFunctionCall","src":"1848:71:5"},"nodeType":"YulExpressionStatement","src":"1848:71:5"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1973:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1986:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"1997:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1982:3:5"},"nodeType":"YulFunctionCall","src":"1982:18:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1929:43:5"},"nodeType":"YulFunctionCall","src":"1929:72:5"},"nodeType":"YulExpressionStatement","src":"1929:72:5"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1766:9:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1778:6:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1786:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1797:4:5","type":""}],"src":"1676:332:5"},{"body":{"nodeType":"YulBlock","src":"2112:124:5","statements":[{"nodeType":"YulAssignment","src":"2122:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2134:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2145:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2130:3:5"},"nodeType":"YulFunctionCall","src":"2130:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2122:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2202:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2215:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2226:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2211:3:5"},"nodeType":"YulFunctionCall","src":"2211:17:5"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2158:43:5"},"nodeType":"YulFunctionCall","src":"2158:71:5"},"nodeType":"YulExpressionStatement","src":"2158:71:5"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2084:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2096:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2107:4:5","type":""}],"src":"2014:222:5"},{"body":{"nodeType":"YulBlock","src":"2282:35:5","statements":[{"nodeType":"YulAssignment","src":"2292:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2308:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2302:5:5"},"nodeType":"YulFunctionCall","src":"2302:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2292:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2275:6:5","type":""}],"src":"2242:75:5"},{"body":{"nodeType":"YulBlock","src":"2368:51:5","statements":[{"nodeType":"YulAssignment","src":"2378:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2407:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2389:17:5"},"nodeType":"YulFunctionCall","src":"2389:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2378:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2360:7:5","type":""}],"src":"2323:96:5"},{"body":{"nodeType":"YulBlock","src":"2470:81:5","statements":[{"nodeType":"YulAssignment","src":"2480:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2495:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"2502:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2491:3:5"},"nodeType":"YulFunctionCall","src":"2491:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2480:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2452:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2462:7:5","type":""}],"src":"2425:126:5"},{"body":{"nodeType":"YulBlock","src":"2602:32:5","statements":[{"nodeType":"YulAssignment","src":"2612:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"2623:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2612:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2584:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2594:7:5","type":""}],"src":"2557:77:5"},{"body":{"nodeType":"YulBlock","src":"2729:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2746:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2749:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2739:6:5"},"nodeType":"YulFunctionCall","src":"2739:12:5"},"nodeType":"YulExpressionStatement","src":"2739:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2640:117:5"},{"body":{"nodeType":"YulBlock","src":"2852:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2869:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2872:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2862:6:5"},"nodeType":"YulFunctionCall","src":"2862:12:5"},"nodeType":"YulExpressionStatement","src":"2862:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2763:117:5"},{"body":{"nodeType":"YulBlock","src":"2929:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"2986:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2995:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2998:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2988:6:5"},"nodeType":"YulFunctionCall","src":"2988:12:5"},"nodeType":"YulExpressionStatement","src":"2988:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2952:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2959:17:5"},"nodeType":"YulFunctionCall","src":"2959:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2949:2:5"},"nodeType":"YulFunctionCall","src":"2949:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2942:6:5"},"nodeType":"YulFunctionCall","src":"2942:43:5"},"nodeType":"YulIf","src":"2939:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2922:5:5","type":""}],"src":"2886:122:5"},{"body":{"nodeType":"YulBlock","src":"3057:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"3114:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3123:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3126:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3116:6:5"},"nodeType":"YulFunctionCall","src":"3116:12:5"},"nodeType":"YulExpressionStatement","src":"3116:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3080:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3105:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3087:17:5"},"nodeType":"YulFunctionCall","src":"3087:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3077:2:5"},"nodeType":"YulFunctionCall","src":"3077:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3070:6:5"},"nodeType":"YulFunctionCall","src":"3070:43:5"},"nodeType":"YulIf","src":"3067:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3050:5:5","type":""}],"src":"3014:122:5"}]},"contents":"{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806389bfd38f14610030575b600080fd5b61004a6004803603810190610045919061052e565b61004c565b005b82823360008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156101595783836040517f7d3c58e200000000000000000000000000000000000000000000000000000000815260040161015092919061059f565b60405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161019c91906105c8565b60206040518083038186803b1580156101b457600080fd5b505afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec9190610501565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610253576040517fa04f072600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a1161028d576040517f3646701500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b81526004016102e291906105c8565b60206040518083038186803b1580156102fa57600080fd5b505afa15801561030e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610501565b73ffffffffffffffffffffffffffffffffffffffff161461037f576040517f5740a1c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020013373ffffffffffffffffffffffffffffffffffffffff168152506000808f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508b8d73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e6040516104ab91906105c8565b60405180910390a450505050505050505050505050565b6000813590506104d181610624565b92915050565b6000815190506104e681610624565b92915050565b6000813590506104fb8161063b565b92915050565b6000602082840312156105175761051661061f565b5b6000610525848285016104d7565b91505092915050565b6000806000606084860312156105475761054661061f565b5b6000610555868287016104c2565b9350506020610566868287016104ec565b9250506040610577868287016104ec565b9150509250925092565b61058a816105e3565b82525050565b61059981610615565b82525050565b60006040820190506105b46000830185610581565b6105c16020830184610590565b9392505050565b60006020820190506105dd6000830184610590565b92915050565b60006105ee826105f5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61062d816105e3565b811461063857600080fd5b50565b61064481610615565b811461064f57600080fd5b5056fea26469706673582212201e1567c7973cb7a5363ded6c3cd3d5fc414652c3b2eb0b4001cc88df075ecaf364736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89BFD38F EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x52E JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x159 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0x7D3C58E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP3 SWAP2 SWAP1 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x253 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA04F072600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0x28D JUMPI PUSH1 0x40 MLOAD PUSH32 0x3646701500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x501 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5740A1C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x0 DUP1 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP15 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D1 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E6 DUP2 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4FB DUP2 PUSH2 0x63B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x517 JUMPI PUSH2 0x516 PUSH2 0x61F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP5 DUP3 DUP6 ADD PUSH2 0x4D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x61F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x555 DUP7 DUP3 DUP8 ADD PUSH2 0x4C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x566 DUP7 DUP3 DUP8 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x577 DUP7 DUP3 DUP8 ADD PUSH2 0x4EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x58A DUP2 PUSH2 0x5E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x599 DUP2 PUSH2 0x615 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5B4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x5C1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x590 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP3 PUSH2 0x5F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x5E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x644 DUP2 PUSH2 0x615 JUMP JUMPDEST DUP2 EQ PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E ISZERO PUSH8 0xC7973CB7A5363DED PUSH13 0x3CD3D5FC414652C3B2EB0B4001 0xCC DUP9 0xDF SMOD 0x5E 0xCA RETURN PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ","sourceMap":"318:1614:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1329:601;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;1448:10;1460:7;1469:10;816:22;841:9;:21;851:10;841:21;;;;;;;;;;;;;;;:30;863:7;841:30;;;;;;;;;;;816:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:1;885:7;:13;;;:17;881:103;;;953:10;965:7;925:48;;;;;;;;;;;;:::i;:::-;;;;;;;;881:103;1489:10:::1;1501:7;1510:10;1117:11;1139:10;1117:33;;1160:13;1176:3;:11;;;1188:7;1176:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1160:36;;1221:5;1210:16;;:7;:16;;;1206:79;;1249:25;;;;;;;;;;;;;;1206:79;1545:1:::2;1536:5;:10;1532:85;;1569:37;;;;;;;;;;;;;;1532:85;1626:11;1648:10;1626:33;;1709:4;1673:41;;:3;:15;;;1689:7;1673:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;1669:121;;1737:42;;;;;;;;;;;;;;1669:121;1832:26;;;;;;;;1840:5;1832:26;;;;1847:10;1832:26;;;;::::0;1799:9:::2;:21:::0;1809:10:::2;1799:21;;;;;;;;;;;;;;;:30;1821:7;1799:30;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:7;1896:10;1873:50;;1884:10;1873:50;;;1917:5;1873:50;;;;;;:::i;:::-;;;;;;;;1522:408;1107:195:::1;;993:1;;;806:195:::0;1329:601;;;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:139::-;347:5;385:6;372:20;363:29;;401:33;428:5;401:33;:::i;:::-;301:139;;;;:::o;446:351::-;516:6;565:2;553:9;544:7;540:23;536:32;533:119;;;571:79;;:::i;:::-;533:119;691:1;716:64;772:7;763:6;752:9;748:22;716:64;:::i;:::-;706:74;;662:128;446:351;;;;:::o;803:619::-;880:6;888;896;945:2;933:9;924:7;920:23;916:32;913:119;;;951:79;;:::i;:::-;913:119;1071:1;1096:53;1141:7;1132:6;1121:9;1117:22;1096:53;:::i;:::-;1086:63;;1042:117;1198:2;1224:53;1269:7;1260:6;1249:9;1245:22;1224:53;:::i;:::-;1214:63;;1169:118;1326:2;1352:53;1397:7;1388:6;1377:9;1373:22;1352:53;:::i;:::-;1342:63;;1297:118;803:619;;;;;:::o;1428:118::-;1515:24;1533:5;1515:24;:::i;:::-;1510:3;1503:37;1428:118;;:::o;1552:::-;1639:24;1657:5;1639:24;:::i;:::-;1634:3;1627:37;1552:118;;:::o;1676:332::-;1797:4;1835:2;1824:9;1820:18;1812:26;;1848:71;1916:1;1905:9;1901:17;1892:6;1848:71;:::i;:::-;1929:72;1997:2;1986:9;1982:18;1973:6;1929:72;:::i;:::-;1676:332;;;;;:::o;2014:222::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2158:71;2226:1;2215:9;2211:17;2202:6;2158:71;:::i;:::-;2014:222;;;;:::o;2323:96::-;2360:7;2389:24;2407:5;2389:24;:::i;:::-;2378:35;;2323:96;;;:::o;2425:126::-;2462:7;2502:42;2495:5;2491:54;2480:65;;2425:126;;;:::o;2557:77::-;2594:7;2623:5;2612:16;;2557:77;;;:::o;2763:117::-;2872:1;2869;2862:12;2886:122;2959:24;2977:5;2959:24;:::i;:::-;2952:5;2949:35;2939:63;;2998:1;2995;2988:12;2939:63;2886:122;:::o;3014:::-;3087:24;3105:5;3087:24;:::i;:::-;3080:5;3077:35;3067:63;;3126:1;3123;3116:12;3067:63;3014:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"334400","executionCost":"374","totalCost":"334774"},"external":{"listItem(address,uint256,uint256)":"infinite"}},"methodIdentifiers":{"listItem(address,uint256,uint256)":"89bfd38f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTMarketplace_AlreadListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketplace_NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketplace_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NFTMarketplace_PriceMustBeAboveZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketplace.sol\":\"NftMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NftMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\nerror NFTMarketplace_PriceMustBeAboveZero();\\nerror NFTMarketplace_NotApprovedForMarketplace();\\nerror NFTMarketplace_AlreadListed(address nftAddress, uint256 tokenId);\\nerror NFTMarketplace_NotOwner();\\n\\ncontract NftMarketplace {\\n    struct Listing {\\n        uint256 price;\\n        address seller;\\n    }\\n    event ItemListed(\\n        address indexed seller,\\n        address indexed nftAddress,\\n        uint256 indexed tokenId,\\n        uint256 price\\n    );\\n    mapping(address => mapping(uint256 => Listing)) private s_listing;\\n    ///////////////\\n    ///Modifiers///\\n    ///////////////\\n    modifier notListed(\\n        address nftAddress,\\n        uint256 tokenId,\\n        address owner\\n    ) {\\n        Listing memory listing = s_listing[nftAddress][tokenId];\\n        if (listing.price > 0) {\\n            revert NFTMarketplace_AlreadListed(nftAddress, tokenId);\\n        }\\n        _;\\n    }\\n    modifier isOwner(\\n        address nftAddress,\\n        uint256 tokenId,\\n        address spender\\n    ) {\\n        IERC721 nft = IERC721(nftAddress);\\n        address owner = nft.ownerOf(tokenId);\\n        if (spender != owner) {\\n            revert NFTMarketplace_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // main funtions\\n    function listItem(\\n        address nftAddress,\\n        uint256 tokenId,\\n        uint256 price\\n    ) external notListed(nftAddress, tokenId, msg.sender) isOwner(nftAddress, tokenId, msg.sender) {\\n        if (price <= 0) {\\n            revert NFTMarketplace_PriceMustBeAboveZero();\\n        }\\n        IERC721 nft = IERC721(nftAddress);\\n        if (nft.getApproved(tokenId) != address(this)) {\\n            revert NFTMarketplace_NotApprovedForMarketplace();\\n        }\\n        s_listing[nftAddress][tokenId] = Listing(price, msg.sender);\\n        emit ItemListed(msg.sender, nftAddress, tokenId, price);\\n    }\\n}\\n\\n\\n// 23:58:23\",\"keccak256\":\"0xc3f7ea3384d306252ca407c0cd8fe22041ed4bc4fcd519bb40a47b8e8a285f76\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":287,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"s_listing","offset":0,"slot":"0","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)270_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)270_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Listing)270_storage)"},"t_mapping(t_uint256,t_struct(Listing)270_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NftMarketplace.Listing)","numberOfBytes":"32","value":"t_struct(Listing)270_storage"},"t_struct(Listing)270_storage":{"encoding":"inplace","label":"struct NftMarketplace.Listing","members":[{"astId":267,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"price","offset":0,"slot":"0","type":"t_uint256"},{"astId":269,"contract":"contracts/NftMarketplace.sol:NftMarketplace","label":"seller","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}