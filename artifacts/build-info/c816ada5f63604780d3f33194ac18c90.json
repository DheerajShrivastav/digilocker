{"id":"c816ada5f63604780d3f33194ac18c90","_format":"hh-sol-build-info-1","solcVersion":"0.8.7","solcLongVersion":"0.8.7+commit.e28d00a7","input":{"language":"Solidity","sources":{"contracts/DocCollection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nerror DocCollection_NotApprovedForMarketplace();\nerror DocCollection_NotOwner();\nerror DocCollection_NotUploaded(address docAddress, uint256 tokenId);\n\ncontract DocCollection is ReentrancyGuard {\n    struct Uploading {\n        string title;\n        address owner;\n    }\n    mapping(address => mapping(uint256 => Uploading)) private s_uploads;\n\n    event DocDeleted(address indexed owner, address indexed docAddress, uint256 indexed tokenId);\n\n    event DocUploaded(\n        address indexed owner,\n        address indexed docAddress,\n        uint256 indexed tokenId,\n        string title\n    );\n\n    modifier isUploaded(address docAddress, uint256 tokenId) {\n        Uploading memory uploading = s_uploads[docAddress][tokenId];\n        if (bytes(uploading.title).length <= 0) {\n            revert DocCollection_NotUploaded(docAddress, tokenId);\n        }\n        _;\n    }\n\n    modifier isOwner(\n        address docAddress,\n        uint256 tokenId,\n        address spender\n    ) {\n        IERC721 doc = IERC721(docAddress);\n        address owner = doc.ownerOf(tokenId);\n        if (spender != owner) {\n            revert DocCollection_NotOwner();\n        }\n        _;\n    }\n\n    ///////////////////\n    ///main function///\n    ///////////////////\n\n    function uploadDoc(\n        address docAddress,\n        uint256 tokenId,\n        string memory title\n    ) external isOwner(docAddress, tokenId, msg.sender) {\n        IERC721 doc = IERC721(docAddress);\n        if (doc.getApproved(tokenId) != address(this)) {\n            revert DocCollection_NotApprovedForMarketplace();\n        }\n        s_uploads[docAddress][tokenId] = Uploading(title, msg.sender);\n        emit DocUploaded(msg.sender, docAddress, tokenId, title);\n    }\n\n    function deleteDocument(address docAddress, uint256 tokenId)\n        external\n        isOwner(docAddress, tokenId, msg.sender)\n        isUploaded(docAddress, tokenId)\n    {\n        delete (s_uploads[docAddress][tokenId]);\n        emit DocDeleted(msg.sender, docAddress, tokenId);\n    }\n\n    function getUploads(address docAddress, uint256 tokenId)\n        external\n        view\n        returns (Uploading memory)\n    {\n        return s_uploads[docAddress][tokenId];\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[39]},"id":40,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"97:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"122:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":39,"linearizedBaseContracts":[39],"name":"ReentrancyGuard","nameLocation":"891:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1686:12:0","nodeType":"VariableDeclaration","scope":39,"src":"1661:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1733:8:0","nodeType":"VariableDeclaration","scope":39,"src":"1708:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1708:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1744:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1768:7:0","nodeType":"VariableDeclaration","scope":39,"src":"1752:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1796:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1816:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1806:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1806:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1793:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1796:0:0"},"scope":39,"src":"1782:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"2236:421:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":22,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":23,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2336:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2325:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2346:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":21,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2317:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2317:63:0"},{"expression":{"id":30,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":28,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2455:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":29,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2465:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2455:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":31,"nodeType":"ExpressionStatement","src":"2455:18:0"},{"id":32,"nodeType":"PlaceholderStatement","src":"2484:1:0"},{"expression":{"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2628:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":34,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2638:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2628:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":36,"nodeType":"ExpressionStatement","src":"2628:22:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1841:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":38,"name":"nonReentrant","nameLocation":"2221:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2233:2:0"},"src":"2212:445:0","virtual":false,"visibility":"internal"}],"scope":40,"src":"873:1786:0","usedErrors":[]}],"src":"97:2563:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[167],"IERC721":[155]},"id":156,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":41,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":42,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":156,"sourceUnit":168,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":44,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":167,"src":"271:7:1"},"id":45,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":155,"linearizedBaseContracts":[155,167],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":54,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":54,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":54,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":54,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":63,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":62,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":63,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":63,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":63,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":72,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":72,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":72,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":72,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":80,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":80,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":155,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":88,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":88,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":155,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":100,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"from","nameLocation":"1852:4:1","nodeType":"VariableDeclaration","scope":100,"src":"1844:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"to","nameLocation":"1874:2:1","nodeType":"VariableDeclaration","scope":100,"src":"1866:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":100,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"data","nameLocation":"1926:4:1","nodeType":"VariableDeclaration","scope":100,"src":"1911:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":96,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:1"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"1945:0:1"},"scope":155,"src":"1809:137:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1952:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"from","nameLocation":"2687:4:1","nodeType":"VariableDeclaration","scope":110,"src":"2679:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"to","nameLocation":"2709:2:1","nodeType":"VariableDeclaration","scope":110,"src":"2701:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:1","nodeType":"VariableDeclaration","scope":110,"src":"2721:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[],"src":"2751:0:1"},"scope":155,"src":"2644:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"2758:504:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"from","nameLocation":"3306:4:1","nodeType":"VariableDeclaration","scope":120,"src":"3298:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"to","nameLocation":"3328:2:1","nodeType":"VariableDeclaration","scope":120,"src":"3320:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:1","nodeType":"VariableDeclaration","scope":120,"src":"3340:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[],"src":"3370:0:1"},"scope":155,"src":"3267:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"3377:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":128,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:1","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"to","nameLocation":"3859:2:1","nodeType":"VariableDeclaration","scope":128,"src":"3851:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:1","nodeType":"VariableDeclaration","scope":128,"src":"3863:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:1"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3888:0:1"},"scope":155,"src":"3834:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3895:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":136,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:1","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"operator","nameLocation":"4244:8:1","nodeType":"VariableDeclaration","scope":136,"src":"4236:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:1","nodeType":"VariableDeclaration","scope":136,"src":"4254:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":132,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:1"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"4278:0:1"},"scope":155,"src":"4209:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"4285:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:1","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:1","nodeType":"VariableDeclaration","scope":144,"src":"4450:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:1"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"operator","nameLocation":"4498:8:1","nodeType":"VariableDeclaration","scope":144,"src":"4490:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:1"},"scope":155,"src":"4429:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"4514:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:1","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"owner","nameLocation":"4691:5:1","nodeType":"VariableDeclaration","scope":154,"src":"4683:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"operator","nameLocation":"4706:8:1","nodeType":"VariableDeclaration","scope":154,"src":"4698:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:1"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":154,"src":"4739:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":151,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:1"},"scope":155,"src":"4657:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":156,"src":"250:4497:1","usedErrors":[]}],"src":"108:4640:1"},"id":1},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":157,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"125:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167],"name":"IERC165","nameLocation":"415:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"429:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:2","nodeType":"VariableDeclaration","scope":166,"src":"801:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":160,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":166,"src":"844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":163,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:2"},"scope":167,"src":"774:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"405:447:2","usedErrors":[]}],"src":"100:753:2"},"id":2},"contracts/DocCollection.sol":{"ast":{"absolutePath":"contracts/DocCollection.sol","exportedSymbols":{"DocCollection":[386],"DocCollection_NotApprovedForMarketplace":[173],"DocCollection_NotOwner":[175],"DocCollection_NotUploaded":[181],"IERC165":[167],"IERC721":[155],"ReentrancyGuard":[39]},"id":387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":387,"sourceUnit":156,"src":"57:58:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":387,"sourceUnit":40,"src":"116:62:3","symbolAliases":[],"unitAlias":""},{"id":173,"name":"DocCollection_NotApprovedForMarketplace","nameLocation":"186:39:3","nodeType":"ErrorDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"225:2:3"},"src":"180:48:3"},{"id":175,"name":"DocCollection_NotOwner","nameLocation":"235:22:3","nodeType":"ErrorDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"257:2:3"},"src":"229:31:3"},{"id":181,"name":"DocCollection_NotUploaded","nameLocation":"267:25:3","nodeType":"ErrorDefinition","parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"docAddress","nameLocation":"301:10:3","nodeType":"VariableDeclaration","scope":181,"src":"293:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"293:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"tokenId","nameLocation":"321:7:3","nodeType":"VariableDeclaration","scope":181,"src":"313:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"292:37:3"},"src":"261:69:3"},{"abstract":false,"baseContracts":[{"baseName":{"id":182,"name":"ReentrancyGuard","nodeType":"IdentifierPath","referencedDeclaration":39,"src":"358:15:3"},"id":183,"nodeType":"InheritanceSpecifier","src":"358:15:3"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":386,"linearizedBaseContracts":[386,39],"name":"DocCollection","nameLocation":"341:13:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DocCollection.Uploading","id":188,"members":[{"constant":false,"id":185,"mutability":"mutable","name":"title","nameLocation":"414:5:3","nodeType":"VariableDeclaration","scope":188,"src":"407:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":184,"name":"string","nodeType":"ElementaryTypeName","src":"407:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"owner","nameLocation":"437:5:3","nodeType":"VariableDeclaration","scope":188,"src":"429:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":186,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Uploading","nameLocation":"387:9:3","nodeType":"StructDefinition","scope":386,"src":"380:69:3","visibility":"public"},{"constant":false,"id":195,"mutability":"mutable","name":"s_uploads","nameLocation":"512:9:3","nodeType":"VariableDeclaration","scope":386,"src":"454:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))"},"typeName":{"id":194,"keyType":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"454:49:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))"},"valueType":{"id":193,"keyType":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"481:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"473:29:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading)"},"valueType":{"id":192,"nodeType":"UserDefinedTypeName","pathNode":{"id":191,"name":"Uploading","nodeType":"IdentifierPath","referencedDeclaration":188,"src":"492:9:3"},"referencedDeclaration":188,"src":"492:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage_ptr","typeString":"struct DocCollection.Uploading"}}}},"visibility":"private"},{"anonymous":false,"id":203,"name":"DocDeleted","nameLocation":"534:10:3","nodeType":"EventDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"561:5:3","nodeType":"VariableDeclaration","scope":203,"src":"545:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"545:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"indexed":true,"mutability":"mutable","name":"docAddress","nameLocation":"584:10:3","nodeType":"VariableDeclaration","scope":203,"src":"568:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"568:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"612:7:3","nodeType":"VariableDeclaration","scope":203,"src":"596:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"544:76:3"},"src":"528:93:3"},{"anonymous":false,"id":213,"name":"DocUploaded","nameLocation":"633:11:3","nodeType":"EventDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"670:5:3","nodeType":"VariableDeclaration","scope":213,"src":"654:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":207,"indexed":true,"mutability":"mutable","name":"docAddress","nameLocation":"701:10:3","nodeType":"VariableDeclaration","scope":213,"src":"685:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"685:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"737:7:3","nodeType":"VariableDeclaration","scope":213,"src":"721:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"761:5:3","nodeType":"VariableDeclaration","scope":213,"src":"754:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":210,"name":"string","nodeType":"ElementaryTypeName","src":"754:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"644:128:3"},"src":"627:146:3"},{"body":{"id":244,"nodeType":"Block","src":"836:214:3","statements":[{"assignments":[221],"declarations":[{"constant":false,"id":221,"mutability":"mutable","name":"uploading","nameLocation":"863:9:3","nodeType":"VariableDeclaration","scope":244,"src":"846:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_memory_ptr","typeString":"struct DocCollection.Uploading"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Uploading","nodeType":"IdentifierPath","referencedDeclaration":188,"src":"846:9:3"},"referencedDeclaration":188,"src":"846:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage_ptr","typeString":"struct DocCollection.Uploading"}},"visibility":"internal"}],"id":227,"initialValue":{"baseExpression":{"baseExpression":{"id":222,"name":"s_uploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"875:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading storage ref))"}},"id":224,"indexExpression":{"id":223,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"885:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"875:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading storage ref)"}},"id":226,"indexExpression":{"id":225,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"875:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}},"nodeType":"VariableDeclarationStatement","src":"846:59:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":230,"name":"uploading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"925:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_memory_ptr","typeString":"struct DocCollection.Uploading memory"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"title","nodeType":"MemberAccess","referencedDeclaration":185,"src":"925:15:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":228,"name":"bytes","nodeType":"ElementaryTypeName","src":"919:5:3","typeDescriptions":{}}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"919:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"919:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"919:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":242,"nodeType":"IfStatement","src":"915:118:3","trueBody":{"id":241,"nodeType":"Block","src":"955:78:3","statements":[{"errorCall":{"arguments":[{"id":237,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1002:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":238,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"1014:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":236,"name":"DocCollection_NotUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"976:25:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"976:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"RevertStatement","src":"969:53:3"}]}},{"id":243,"nodeType":"PlaceholderStatement","src":"1042:1:3"}]},"id":245,"name":"isUploaded","nameLocation":"788:10:3","nodeType":"ModifierDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"docAddress","nameLocation":"807:10:3","nodeType":"VariableDeclaration","scope":245,"src":"799:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"tokenId","nameLocation":"827:7:3","nodeType":"VariableDeclaration","scope":245,"src":"819:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"798:37:3"},"src":"779:271:3","virtual":false,"visibility":"internal"},{"body":{"id":276,"nodeType":"Block","src":"1157:194:3","statements":[{"assignments":[255],"declarations":[{"constant":false,"id":255,"mutability":"mutable","name":"doc","nameLocation":"1175:3:3","nodeType":"VariableDeclaration","scope":276,"src":"1167:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"},"typeName":{"id":254,"nodeType":"UserDefinedTypeName","pathNode":{"id":253,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"1167:7:3"},"referencedDeclaration":155,"src":"1167:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"visibility":"internal"}],"id":259,"initialValue":{"arguments":[{"id":257,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1189:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":256,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1181:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$155_$","typeString":"type(contract IERC721)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1181:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1167:33:3"},{"assignments":[261],"declarations":[{"constant":false,"id":261,"mutability":"mutable","name":"owner","nameLocation":"1218:5:3","nodeType":"VariableDeclaration","scope":276,"src":"1210:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"1210:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":266,"initialValue":{"arguments":[{"id":264,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1238:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":262,"name":"doc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1226:3:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":88,"src":"1226:11:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1226:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1210:36:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":267,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1260:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":268,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"1271:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1260:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"1256:78:3","trueBody":{"id":273,"nodeType":"Block","src":"1278:56:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":270,"name":"DocCollection_NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1299:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1299:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"RevertStatement","src":"1292:31:3"}]}},{"id":275,"nodeType":"PlaceholderStatement","src":"1343:1:3"}]},"id":277,"name":"isOwner","nameLocation":"1065:7:3","nodeType":"ModifierDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"docAddress","nameLocation":"1090:10:3","nodeType":"VariableDeclaration","scope":277,"src":"1082:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"tokenId","nameLocation":"1118:7:3","nodeType":"VariableDeclaration","scope":277,"src":"1110:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1110:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":251,"mutability":"mutable","name":"spender","nameLocation":"1143:7:3","nodeType":"VariableDeclaration","scope":277,"src":"1135:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1072:84:3"},"src":"1056:295:3","virtual":false,"visibility":"internal"},{"body":{"id":334,"nodeType":"Block","src":"1587:316:3","statements":[{"assignments":[295],"declarations":[{"constant":false,"id":295,"mutability":"mutable","name":"doc","nameLocation":"1605:3:3","nodeType":"VariableDeclaration","scope":334,"src":"1597:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"},"typeName":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":155,"src":"1597:7:3"},"referencedDeclaration":155,"src":"1597:7:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"visibility":"internal"}],"id":299,"initialValue":{"arguments":[{"id":297,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1619:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"1611:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$155_$","typeString":"type(contract IERC721)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1611:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1597:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":302,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1660:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":300,"name":"doc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1644:3:3","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$155","typeString":"contract IERC721"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":144,"src":"1644:15:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1644:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":306,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1680:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_DocCollection_$386","typeString":"contract DocCollection"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DocCollection_$386","typeString":"contract DocCollection"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1672:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:3","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1672:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1644:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":313,"nodeType":"IfStatement","src":"1640:120:3","trueBody":{"id":312,"nodeType":"Block","src":"1687:73:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":309,"name":"DocCollection_NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1708:39:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1708:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"RevertStatement","src":"1701:48:3"}]}},{"expression":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":314,"name":"s_uploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"1769:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading storage ref))"}},"id":317,"indexExpression":{"id":315,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1779:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1769:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading storage ref)"}},"id":318,"indexExpression":{"id":316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1791:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1769:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":320,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1812:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":321,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1819:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1819:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":319,"name":"Uploading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"1802:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Uploading_$188_storage_ptr_$","typeString":"type(struct DocCollection.Uploading storage pointer)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1802:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_memory_ptr","typeString":"struct DocCollection.Uploading memory"}},"src":"1769:61:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}},"id":325,"nodeType":"ExpressionStatement","src":"1769:61:3"},{"eventCall":{"arguments":[{"expression":{"id":327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1857:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1857:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1869:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":330,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":331,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1890:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":326,"name":"DocUploaded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1845:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,string memory)"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1845:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"EmitStatement","src":"1840:56:3"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"1381:19:3","text":"main function///"},"functionSelector":"22b6a53c","id":335,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":287,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"1554:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"1566:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1575:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1575:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":291,"kind":"modifierInvocation","modifierName":{"id":286,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":277,"src":"1546:7:3"},"nodeType":"ModifierInvocation","src":"1546:40:3"}],"name":"uploadDoc","nameLocation":"1439:9:3","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"docAddress","nameLocation":"1466:10:3","nodeType":"VariableDeclaration","scope":335,"src":"1458:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"1458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"tokenId","nameLocation":"1494:7:3","nodeType":"VariableDeclaration","scope":335,"src":"1486:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1486:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"title","nameLocation":"1525:5:3","nodeType":"VariableDeclaration","scope":335,"src":"1511:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"1511:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1448:88:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"1587:0:3"},"scope":386,"src":"1430:473:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":367,"nodeType":"Block","src":"2080:114:3","statements":[{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2090:39:3","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":352,"name":"s_uploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2098:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading storage ref))"}},"id":354,"indexExpression":{"id":353,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2108:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2098:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading storage ref)"}},"id":356,"indexExpression":{"id":355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2098:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}}],"id":357,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2097:32:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":359,"nodeType":"ExpressionStatement","src":"2090:39:3"},{"eventCall":{"arguments":[{"expression":{"id":361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2155:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2155:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":363,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2167:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2179:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"DocDeleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2144:10:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2144:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"EmitStatement","src":"2139:48:3"}]},"functionSelector":"ef353be5","id":368,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":342,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2003:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":343,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2015:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2024:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2024:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":346,"kind":"modifierInvocation","modifierName":{"id":341,"name":"isOwner","nodeType":"IdentifierPath","referencedDeclaration":277,"src":"1995:7:3"},"nodeType":"ModifierInvocation","src":"1995:40:3"},{"arguments":[{"id":348,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2055:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"2067:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":350,"kind":"modifierInvocation","modifierName":{"id":347,"name":"isUploaded","nodeType":"IdentifierPath","referencedDeclaration":245,"src":"2044:10:3"},"nodeType":"ModifierInvocation","src":"2044:31:3"}],"name":"deleteDocument","nameLocation":"1918:14:3","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"docAddress","nameLocation":"1941:10:3","nodeType":"VariableDeclaration","scope":368,"src":"1933:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"1961:7:3","nodeType":"VariableDeclaration","scope":368,"src":"1953:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1932:37:3"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"2080:0:3"},"scope":386,"src":"1909:285:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":384,"nodeType":"Block","src":"2326:54:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":378,"name":"s_uploads","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2343:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct DocCollection.Uploading storage ref))"}},"id":380,"indexExpression":{"id":379,"name":"docAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2353:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2343:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Uploading_$188_storage_$","typeString":"mapping(uint256 => struct DocCollection.Uploading storage ref)"}},"id":382,"indexExpression":{"id":381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2343:30:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage","typeString":"struct DocCollection.Uploading storage ref"}},"functionReturnParameters":377,"id":383,"nodeType":"Return","src":"2336:37:3"}]},"functionSelector":"287911c3","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"getUploads","nameLocation":"2209:10:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"docAddress","nameLocation":"2228:10:3","nodeType":"VariableDeclaration","scope":385,"src":"2220:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"2220:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"tokenId","nameLocation":"2248:7:3","nodeType":"VariableDeclaration","scope":385,"src":"2240:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2240:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2219:37:3"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"2304:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_memory_ptr","typeString":"struct DocCollection.Uploading"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"Uploading","nodeType":"IdentifierPath","referencedDeclaration":188,"src":"2304:9:3"},"referencedDeclaration":188,"src":"2304:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_Uploading_$188_storage_ptr","typeString":"struct DocCollection.Uploading"}},"visibility":"internal"}],"src":"2303:18:3"},"scope":386,"src":"2200:180:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":387,"src":"332:2050:3","usedErrors":[173,175,181]}],"src":"32:2351:3"},"id":3}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DocCollection.sol":{"DocCollection":{"abi":[{"inputs":[],"name":"DocCollection_NotApprovedForMarketplace","type":"error"},{"inputs":[],"name":"DocCollection_NotOwner","type":"error"},{"inputs":[{"internalType":"address","name":"docAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DocCollection_NotUploaded","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"docAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DocDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"docAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"title","type":"string"}],"name":"DocUploaded","type":"event"},{"inputs":[{"internalType":"address","name":"docAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deleteDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"docAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getUploads","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"address","name":"owner","type":"address"}],"internalType":"struct DocCollection.Uploading","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"docAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"title","type":"string"}],"name":"uploadDoc","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506001600081905550610f0d806100286000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806322b6a53c14610046578063287911c314610062578063ef353be514610092575b600080fd5b610060600480360381019061005b9190610aef565b6100ae565b005b61007c60048036038101906100779190610aaf565b6103ed565b6040516100899190610c85565b60405180910390f35b6100ac60048036038101906100a79190610aaf565b610540565b005b828233600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016100f19190610ca7565b60206040518083038186803b15801561010957600080fd5b505afa15801561011d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101419190610a82565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146101a8576040517f8d5f03a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008890503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8a6040518263ffffffff1660e01b81526004016101fd9190610ca7565b60206040518083038186803b15801561021557600080fd5b505afa158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610a82565b73ffffffffffffffffffffffffffffffffffffffff161461029a576040517f8ae97c5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808881526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008201518160000190805190602001906103319291906108c0565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050878973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8a818403715070228869f2cfb3873b19aca8cc7f709f034456869ce265ca7cc58a6040516103da9190610c63565b60405180910390a4505050505050505050565b6103f5610946565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201805461046090610dc3565b80601f016020809104026020016040519081016040528092919081815260200182805461048c90610dc3565b80156104d95780601f106104ae576101008083540402835291602001916104d9565b820191906000526020600020905b8154815290600101906020018083116104bc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016105839190610ca7565b60206040518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190610a82565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461063a576040517f8d5f03a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820180546106a990610dc3565b80601f01602080910402602001604051908101604052809291908181526020018280546106d590610dc3565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015151116107cf5782826040517f5cf227200000000000000000000000000000000000000000000000000000000081526004016107c6929190610c3a565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600080820160006108309190610976565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fba87561d6b48f7f2d1c501299e086802efef782b0caf38c25ea323e023e62ccb60405160405180910390a450505050505050505050565b8280546108cc90610dc3565b90600052602060002090601f0160209004810192826108ee5760008555610935565b82601f1061090757805160ff1916838001178555610935565b82800160010185558215610935579182015b82811115610934578251825591602001919060010190610919565b5b50905061094291906109b6565b5090565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b50805461098290610dc3565b6000825580601f1061099457506109b3565b601f0160209004906000526020600020908101906109b291906109b6565b5b50565b5b808211156109cf5760008160009055506001016109b7565b5090565b60006109e66109e184610ce7565b610cc2565b905082815260208101848484011115610a0257610a01610e89565b5b610a0d848285610d81565b509392505050565b600081359050610a2481610ea9565b92915050565b600081519050610a3981610ea9565b92915050565b600082601f830112610a5457610a53610e84565b5b8135610a648482602086016109d3565b91505092915050565b600081359050610a7c81610ec0565b92915050565b600060208284031215610a9857610a97610e93565b5b6000610aa684828501610a2a565b91505092915050565b60008060408385031215610ac657610ac5610e93565b5b6000610ad485828601610a15565b9250506020610ae585828601610a6d565b9150509250929050565b600080600060608486031215610b0857610b07610e93565b5b6000610b1686828701610a15565b9350506020610b2786828701610a6d565b925050604084013567ffffffffffffffff811115610b4857610b47610e8e565b5b610b5486828701610a3f565b9150509250925092565b610b6781610d45565b82525050565b610b7681610d45565b82525050565b6000610b8782610d18565b610b918185610d23565b9350610ba1818560208601610d90565b610baa81610e98565b840191505092915050565b6000610bc082610d18565b610bca8185610d34565b9350610bda818560208601610d90565b610be381610e98565b840191505092915050565b60006040830160008301518482036000860152610c0b8282610b7c565b9150506020830151610c206020860182610b5e565b508091505092915050565b610c3481610d77565b82525050565b6000604082019050610c4f6000830185610b6d565b610c5c6020830184610c2b565b9392505050565b60006020820190508181036000830152610c7d8184610bb5565b905092915050565b60006020820190508181036000830152610c9f8184610bee565b905092915050565b6000602082019050610cbc6000830184610c2b565b92915050565b6000610ccc610cdd565b9050610cd88282610df5565b919050565b6000604051905090565b600067ffffffffffffffff821115610d0257610d01610e55565b5b610d0b82610e98565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d5082610d57565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610dae578082015181840152602081019050610d93565b83811115610dbd576000848401525b50505050565b60006002820490506001821680610ddb57607f821691505b60208210811415610def57610dee610e26565b5b50919050565b610dfe82610e98565b810181811067ffffffffffffffff82111715610e1d57610e1c610e55565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610eb281610d45565b8114610ebd57600080fd5b50565b610ec981610d77565b8114610ed457600080fd5b5056fea26469706673582212204f1034a594465a78956f11b68196c6dbba9a76e24e08d8d9522699dbe790939e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xF0D DUP1 PUSH2 0x28 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22B6A53C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x287911C3 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xEF353BE5 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D5F03A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AE97C5800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x331 SWAP3 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A818403715070228869F2CFB3873B19ACA8CC7F709F034456869CE265CA7CC5 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48C SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D5F03A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x6A9 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D5 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x722 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x722 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x705 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD MLOAD GT PUSH2 0x7CF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x5CF2272000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C6 SWAP3 SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA87561D6B48F7F2D1C501299E086802EFEF782B0CAF38C25EA323E023E62CCB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x8EE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x935 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x907 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x935 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x935 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x934 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x919 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x982 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x994 JUMPI POP PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9CF JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x9B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 PUSH2 0x9E1 DUP5 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA02 JUMPI PUSH2 0xA01 PUSH2 0xE89 JUMP JUMPDEST JUMPDEST PUSH2 0xA0D DUP5 DUP3 DUP6 PUSH2 0xD81 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA24 DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA39 DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA54 JUMPI PUSH2 0xA53 PUSH2 0xE84 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA64 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA7C DUP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA97 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xAC5 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD4 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE5 DUP6 DUP3 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB16 DUP7 DUP3 DUP8 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB27 DUP7 DUP3 DUP8 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xE8E JUMP JUMPDEST JUMPDEST PUSH2 0xB54 DUP7 DUP3 DUP8 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB67 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB87 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xB91 DUP2 DUP6 PUSH2 0xD23 JUMP JUMPDEST SWAP4 POP PUSH2 0xBA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xBCA DUP2 DUP6 PUSH2 0xD34 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xC0B DUP3 DUP3 PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC20 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xB5E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0xC5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCC PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP PUSH2 0xCD8 DUP3 DUP3 PUSH2 0xDF5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD01 PUSH2 0xE55 JUMP JUMPDEST JUMPDEST PUSH2 0xD0B DUP3 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP3 PUSH2 0xD57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD93 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDDB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xE26 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFE DUP3 PUSH2 0xE98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xE55 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB2 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP2 EQ PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEC9 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F LT CALLVALUE 0xA5 SWAP5 CHAINID GAS PUSH25 0x956F11B68196C6DBBA9A76E24E08D8D9522699DBE790939E64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"332:2050:3:-:0;;;;;;;;;;;;;1701:1:0;1806:7;:22;;;;332:2050:3;;;;;;"},"deployedBytecode":{"functionDebugData":{"@deleteDocument_368":{"entryPoint":1344,"id":368,"parameterSlots":2,"returnSlots":0},"@getUploads_385":{"entryPoint":1005,"id":385,"parameterSlots":2,"returnSlots":1},"@uploadDoc_335":{"entryPoint":174,"id":335,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":2515,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2581,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":2602,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":2690,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2735,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr":{"entryPoint":2799,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":2910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2997,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Uploading_$188_memory_ptr_to_t_struct$_Uploading_$188_memory_ptr_fromStack":{"entryPoint":3054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3115,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":3130,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_Uploading_$188_memory_ptr__to_t_struct$_Uploading_$188_memory_ptr__fromStack_reversed":{"entryPoint":3205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3239,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3266,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3293,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":3303,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3352,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":3363,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3380,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3397,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3415,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3447,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":3457,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":3472,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3523,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3573,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":3622,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3669,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3716,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3721,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3726,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3731,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3736,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3753,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3776,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9507:4","statements":[{"body":{"nodeType":"YulBlock","src":"91:328:4","statements":[{"nodeType":"YulAssignment","src":"101:75:4","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"168:6:4"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"126:41:4"},"nodeType":"YulFunctionCall","src":"126:49:4"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"110:15:4"},"nodeType":"YulFunctionCall","src":"110:66:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"101:5:4"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"192:5:4"},{"name":"length","nodeType":"YulIdentifier","src":"199:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"185:6:4"},"nodeType":"YulFunctionCall","src":"185:21:4"},"nodeType":"YulExpressionStatement","src":"185:21:4"},{"nodeType":"YulVariableDeclaration","src":"215:27:4","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"230:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"237:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"226:3:4"},"nodeType":"YulFunctionCall","src":"226:16:4"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"219:3:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"280:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"282:77:4"},"nodeType":"YulFunctionCall","src":"282:79:4"},"nodeType":"YulExpressionStatement","src":"282:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"261:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"266:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"257:3:4"},"nodeType":"YulFunctionCall","src":"257:16:4"},{"name":"end","nodeType":"YulIdentifier","src":"275:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"254:2:4"},"nodeType":"YulFunctionCall","src":"254:25:4"},"nodeType":"YulIf","src":"251:112:4"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"396:3:4"},{"name":"dst","nodeType":"YulIdentifier","src":"401:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"406:6:4"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"372:23:4"},"nodeType":"YulFunctionCall","src":"372:41:4"},"nodeType":"YulExpressionStatement","src":"372:41:4"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"64:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"69:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"77:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"85:5:4","type":""}],"src":"7:412:4"},{"body":{"nodeType":"YulBlock","src":"477:87:4","statements":[{"nodeType":"YulAssignment","src":"487:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"509:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"496:12:4"},"nodeType":"YulFunctionCall","src":"496:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"487:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"552:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"525:26:4"},"nodeType":"YulFunctionCall","src":"525:33:4"},"nodeType":"YulExpressionStatement","src":"525:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"455:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"463:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"471:5:4","type":""}],"src":"425:139:4"},{"body":{"nodeType":"YulBlock","src":"633:80:4","statements":[{"nodeType":"YulAssignment","src":"643:22:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"658:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"652:5:4"},"nodeType":"YulFunctionCall","src":"652:13:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"643:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"701:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"674:26:4"},"nodeType":"YulFunctionCall","src":"674:33:4"},"nodeType":"YulExpressionStatement","src":"674:33:4"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"611:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"619:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"627:5:4","type":""}],"src":"570:143:4"},{"body":{"nodeType":"YulBlock","src":"795:278:4","statements":[{"body":{"nodeType":"YulBlock","src":"844:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"846:77:4"},"nodeType":"YulFunctionCall","src":"846:79:4"},"nodeType":"YulExpressionStatement","src":"846:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"823:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"831:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"819:3:4"},"nodeType":"YulFunctionCall","src":"819:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"838:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"815:3:4"},"nodeType":"YulFunctionCall","src":"815:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"808:6:4"},"nodeType":"YulFunctionCall","src":"808:35:4"},"nodeType":"YulIf","src":"805:122:4"},{"nodeType":"YulVariableDeclaration","src":"936:34:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"963:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"950:12:4"},"nodeType":"YulFunctionCall","src":"950:20:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"940:6:4","type":""}]},{"nodeType":"YulAssignment","src":"979:88:4","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1040:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"1048:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:4"},"nodeType":"YulFunctionCall","src":"1036:17:4"},{"name":"length","nodeType":"YulIdentifier","src":"1055:6:4"},{"name":"end","nodeType":"YulIdentifier","src":"1063:3:4"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"988:47:4"},"nodeType":"YulFunctionCall","src":"988:79:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"979:5:4"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"773:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"781:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"789:5:4","type":""}],"src":"733:340:4"},{"body":{"nodeType":"YulBlock","src":"1131:87:4","statements":[{"nodeType":"YulAssignment","src":"1141:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1163:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1150:12:4"},"nodeType":"YulFunctionCall","src":"1150:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1141:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1206:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1179:26:4"},"nodeType":"YulFunctionCall","src":"1179:33:4"},"nodeType":"YulExpressionStatement","src":"1179:33:4"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"1117:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1125:5:4","type":""}],"src":"1079:139:4"},{"body":{"nodeType":"YulBlock","src":"1301:274:4","statements":[{"body":{"nodeType":"YulBlock","src":"1347:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1349:77:4"},"nodeType":"YulFunctionCall","src":"1349:79:4"},"nodeType":"YulExpressionStatement","src":"1349:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1322:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1331:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1318:3:4"},"nodeType":"YulFunctionCall","src":"1318:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1343:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1314:3:4"},"nodeType":"YulFunctionCall","src":"1314:32:4"},"nodeType":"YulIf","src":"1311:119:4"},{"nodeType":"YulBlock","src":"1440:128:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1455:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1469:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1459:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1484:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1530:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1541:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1526:3:4"},"nodeType":"YulFunctionCall","src":"1526:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1550:7:4"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1494:31:4"},"nodeType":"YulFunctionCall","src":"1494:64:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:4"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1271:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1282:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1294:6:4","type":""}],"src":"1224:351:4"},{"body":{"nodeType":"YulBlock","src":"1664:391:4","statements":[{"body":{"nodeType":"YulBlock","src":"1710:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1712:77:4"},"nodeType":"YulFunctionCall","src":"1712:79:4"},"nodeType":"YulExpressionStatement","src":"1712:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1685:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1694:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1681:3:4"},"nodeType":"YulFunctionCall","src":"1681:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1706:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1677:3:4"},"nodeType":"YulFunctionCall","src":"1677:32:4"},"nodeType":"YulIf","src":"1674:119:4"},{"nodeType":"YulBlock","src":"1803:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1818:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1832:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1822:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1847:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1882:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1893:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1878:3:4"},"nodeType":"YulFunctionCall","src":"1878:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1902:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1857:20:4"},"nodeType":"YulFunctionCall","src":"1857:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1847:6:4"}]}]},{"nodeType":"YulBlock","src":"1930:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1945:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1959:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1949:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1975:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2021:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:4"},"nodeType":"YulFunctionCall","src":"2006:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2030:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1985:20:4"},"nodeType":"YulFunctionCall","src":"1985:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1975:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1626:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1637:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1649:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1657:6:4","type":""}],"src":"1581:474:4"},{"body":{"nodeType":"YulBlock","src":"2171:689:4","statements":[{"body":{"nodeType":"YulBlock","src":"2217:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2219:77:4"},"nodeType":"YulFunctionCall","src":"2219:79:4"},"nodeType":"YulExpressionStatement","src":"2219:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2192:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"2201:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2188:3:4"},"nodeType":"YulFunctionCall","src":"2188:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"2213:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2184:3:4"},"nodeType":"YulFunctionCall","src":"2184:32:4"},"nodeType":"YulIf","src":"2181:119:4"},{"nodeType":"YulBlock","src":"2310:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2325:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2339:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2329:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2354:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2389:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2400:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2385:3:4"},"nodeType":"YulFunctionCall","src":"2385:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2409:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2364:20:4"},"nodeType":"YulFunctionCall","src":"2364:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2354:6:4"}]}]},{"nodeType":"YulBlock","src":"2437:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2452:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2466:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2456:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2482:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2517:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2528:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2513:3:4"},"nodeType":"YulFunctionCall","src":"2513:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2537:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2492:20:4"},"nodeType":"YulFunctionCall","src":"2492:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2482:6:4"}]}]},{"nodeType":"YulBlock","src":"2565:288:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2580:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2611:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"2622:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2607:3:4"},"nodeType":"YulFunctionCall","src":"2607:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2594:12:4"},"nodeType":"YulFunctionCall","src":"2594:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2584:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"2673:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2675:77:4"},"nodeType":"YulFunctionCall","src":"2675:79:4"},"nodeType":"YulExpressionStatement","src":"2675:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2645:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"2653:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2642:2:4"},"nodeType":"YulFunctionCall","src":"2642:30:4"},"nodeType":"YulIf","src":"2639:117:4"},{"nodeType":"YulAssignment","src":"2770:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2815:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"2826:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2811:3:4"},"nodeType":"YulFunctionCall","src":"2811:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2835:7:4"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2780:30:4"},"nodeType":"YulFunctionCall","src":"2780:63:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2770:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2125:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2136:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2148:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2156:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2164:6:4","type":""}],"src":"2061:799:4"},{"body":{"nodeType":"YulBlock","src":"2921:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2938:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2961:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2943:17:4"},"nodeType":"YulFunctionCall","src":"2943:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:4"},"nodeType":"YulFunctionCall","src":"2931:37:4"},"nodeType":"YulExpressionStatement","src":"2931:37:4"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2909:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2916:3:4","type":""}],"src":"2866:108:4"},{"body":{"nodeType":"YulBlock","src":"3045:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3062:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3085:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3067:17:4"},"nodeType":"YulFunctionCall","src":"3067:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3055:6:4"},"nodeType":"YulFunctionCall","src":"3055:37:4"},"nodeType":"YulExpressionStatement","src":"3055:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3033:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3040:3:4","type":""}],"src":"2980:118:4"},{"body":{"nodeType":"YulBlock","src":"3186:262:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3196:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3243:5:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3210:32:4"},"nodeType":"YulFunctionCall","src":"3210:39:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3200:6:4","type":""}]},{"nodeType":"YulAssignment","src":"3258:68:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3314:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"3319:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3265:48:4"},"nodeType":"YulFunctionCall","src":"3265:61:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3258:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3361:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3368:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3357:3:4"},"nodeType":"YulFunctionCall","src":"3357:16:4"},{"name":"pos","nodeType":"YulIdentifier","src":"3375:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"3380:6:4"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3335:21:4"},"nodeType":"YulFunctionCall","src":"3335:52:4"},"nodeType":"YulExpressionStatement","src":"3335:52:4"},{"nodeType":"YulAssignment","src":"3396:46:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3407:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3434:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3412:21:4"},"nodeType":"YulFunctionCall","src":"3412:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3403:3:4"},"nodeType":"YulFunctionCall","src":"3403:39:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3396:3:4"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3167:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3174:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3182:3:4","type":""}],"src":"3104:344:4"},{"body":{"nodeType":"YulBlock","src":"3546:272:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3556:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3603:5:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3570:32:4"},"nodeType":"YulFunctionCall","src":"3570:39:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3560:6:4","type":""}]},{"nodeType":"YulAssignment","src":"3618:78:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3684:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"3689:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3625:58:4"},"nodeType":"YulFunctionCall","src":"3625:71:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3618:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3731:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"3738:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3727:3:4"},"nodeType":"YulFunctionCall","src":"3727:16:4"},{"name":"pos","nodeType":"YulIdentifier","src":"3745:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"3750:6:4"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3705:21:4"},"nodeType":"YulFunctionCall","src":"3705:52:4"},"nodeType":"YulExpressionStatement","src":"3705:52:4"},{"nodeType":"YulAssignment","src":"3766:46:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3777:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3804:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3782:21:4"},"nodeType":"YulFunctionCall","src":"3782:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3773:3:4"},"nodeType":"YulFunctionCall","src":"3773:39:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3766:3:4"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3527:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3534:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3542:3:4","type":""}],"src":"3454:364:4"},{"body":{"nodeType":"YulBlock","src":"4022:484:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:26:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4048:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4053:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4044:3:4"},"nodeType":"YulFunctionCall","src":"4044:14:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4036:4:4","type":""}]},{"nodeType":"YulBlock","src":"4068:236:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4104:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4134:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4141:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:4"},"nodeType":"YulFunctionCall","src":"4130:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4124:5:4"},"nodeType":"YulFunctionCall","src":"4124:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4108:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4172:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4177:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4168:3:4"},"nodeType":"YulFunctionCall","src":"4168:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4188:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"4194:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4184:3:4"},"nodeType":"YulFunctionCall","src":"4184:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4161:6:4"},"nodeType":"YulFunctionCall","src":"4161:38:4"},"nodeType":"YulExpressionStatement","src":"4161:38:4"},{"nodeType":"YulAssignment","src":"4212:81:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4274:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"4288:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4220:53:4"},"nodeType":"YulFunctionCall","src":"4220:73:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4212:4:4"}]}]},{"nodeType":"YulBlock","src":"4314:165:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4350:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4380:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4387:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4376:3:4"},"nodeType":"YulFunctionCall","src":"4376:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4370:5:4"},"nodeType":"YulFunctionCall","src":"4370:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4354:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4440:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4458:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4463:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4454:3:4"},"nodeType":"YulFunctionCall","src":"4454:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4406:33:4"},"nodeType":"YulFunctionCall","src":"4406:63:4"},"nodeType":"YulExpressionStatement","src":"4406:63:4"}]},{"nodeType":"YulAssignment","src":"4489:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"4496:4:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4489:3:4"}]}]},"name":"abi_encode_t_struct$_Uploading_$188_memory_ptr_to_t_struct$_Uploading_$188_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4001:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4008:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4017:3:4","type":""}],"src":"3896:610:4"},{"body":{"nodeType":"YulBlock","src":"4577:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4594:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4617:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4599:17:4"},"nodeType":"YulFunctionCall","src":"4599:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4587:6:4"},"nodeType":"YulFunctionCall","src":"4587:37:4"},"nodeType":"YulExpressionStatement","src":"4587:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4565:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4572:3:4","type":""}],"src":"4512:118:4"},{"body":{"nodeType":"YulBlock","src":"4762:206:4","statements":[{"nodeType":"YulAssignment","src":"4772:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4784:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4795:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4780:3:4"},"nodeType":"YulFunctionCall","src":"4780:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4772:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4852:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4865:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4876:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4861:3:4"},"nodeType":"YulFunctionCall","src":"4861:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4808:43:4"},"nodeType":"YulFunctionCall","src":"4808:71:4"},"nodeType":"YulExpressionStatement","src":"4808:71:4"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4933:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4946:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"4957:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4942:3:4"},"nodeType":"YulFunctionCall","src":"4942:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4889:43:4"},"nodeType":"YulFunctionCall","src":"4889:72:4"},"nodeType":"YulExpressionStatement","src":"4889:72:4"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4726:9:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4738:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4746:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4757:4:4","type":""}],"src":"4636:332:4"},{"body":{"nodeType":"YulBlock","src":"5092:195:4","statements":[{"nodeType":"YulAssignment","src":"5102:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5114:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5125:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5110:3:4"},"nodeType":"YulFunctionCall","src":"5110:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5102:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5149:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5160:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5145:3:4"},"nodeType":"YulFunctionCall","src":"5145:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"5174:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5164:3:4"},"nodeType":"YulFunctionCall","src":"5164:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5138:6:4"},"nodeType":"YulFunctionCall","src":"5138:47:4"},"nodeType":"YulExpressionStatement","src":"5138:47:4"},{"nodeType":"YulAssignment","src":"5194:86:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5266:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"5275:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5202:63:4"},"nodeType":"YulFunctionCall","src":"5202:78:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5194:4:4"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5064:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5076:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5087:4:4","type":""}],"src":"4974:313:4"},{"body":{"nodeType":"YulBlock","src":"5443:227:4","statements":[{"nodeType":"YulAssignment","src":"5453:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5465:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5476:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5461:3:4"},"nodeType":"YulFunctionCall","src":"5461:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5453:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5500:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5511:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5496:3:4"},"nodeType":"YulFunctionCall","src":"5496:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5519:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"5525:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5515:3:4"},"nodeType":"YulFunctionCall","src":"5515:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5489:6:4"},"nodeType":"YulFunctionCall","src":"5489:47:4"},"nodeType":"YulExpressionStatement","src":"5489:47:4"},{"nodeType":"YulAssignment","src":"5545:118:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5649:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"5658:4:4"}],"functionName":{"name":"abi_encode_t_struct$_Uploading_$188_memory_ptr_to_t_struct$_Uploading_$188_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5553:95:4"},"nodeType":"YulFunctionCall","src":"5553:110:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5545:4:4"}]}]},"name":"abi_encode_tuple_t_struct$_Uploading_$188_memory_ptr__to_t_struct$_Uploading_$188_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5415:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5427:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5438:4:4","type":""}],"src":"5293:377:4"},{"body":{"nodeType":"YulBlock","src":"5774:124:4","statements":[{"nodeType":"YulAssignment","src":"5784:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5796:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5807:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5792:3:4"},"nodeType":"YulFunctionCall","src":"5792:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5784:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5864:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5877:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"5888:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5873:3:4"},"nodeType":"YulFunctionCall","src":"5873:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5820:43:4"},"nodeType":"YulFunctionCall","src":"5820:71:4"},"nodeType":"YulExpressionStatement","src":"5820:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5746:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5758:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5769:4:4","type":""}],"src":"5676:222:4"},{"body":{"nodeType":"YulBlock","src":"5945:88:4","statements":[{"nodeType":"YulAssignment","src":"5955:30:4","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5965:18:4"},"nodeType":"YulFunctionCall","src":"5965:20:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5955:6:4"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6014:6:4"},{"name":"size","nodeType":"YulIdentifier","src":"6022:4:4"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5994:19:4"},"nodeType":"YulFunctionCall","src":"5994:33:4"},"nodeType":"YulExpressionStatement","src":"5994:33:4"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5929:4:4","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5938:6:4","type":""}],"src":"5904:129:4"},{"body":{"nodeType":"YulBlock","src":"6079:35:4","statements":[{"nodeType":"YulAssignment","src":"6089:19:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6105:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6099:5:4"},"nodeType":"YulFunctionCall","src":"6099:9:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6089:6:4"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6072:6:4","type":""}],"src":"6039:75:4"},{"body":{"nodeType":"YulBlock","src":"6187:241:4","statements":[{"body":{"nodeType":"YulBlock","src":"6292:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6294:16:4"},"nodeType":"YulFunctionCall","src":"6294:18:4"},"nodeType":"YulExpressionStatement","src":"6294:18:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6264:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"6272:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6261:2:4"},"nodeType":"YulFunctionCall","src":"6261:30:4"},"nodeType":"YulIf","src":"6258:56:4"},{"nodeType":"YulAssignment","src":"6324:37:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6354:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6332:21:4"},"nodeType":"YulFunctionCall","src":"6332:29:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6324:4:4"}]},{"nodeType":"YulAssignment","src":"6398:23:4","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6410:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"6416:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6406:3:4"},"nodeType":"YulFunctionCall","src":"6406:15:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6398:4:4"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6171:6:4","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6182:4:4","type":""}],"src":"6120:308:4"},{"body":{"nodeType":"YulBlock","src":"6493:40:4","statements":[{"nodeType":"YulAssignment","src":"6504:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6520:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6514:5:4"},"nodeType":"YulFunctionCall","src":"6514:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6504:6:4"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6476:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6486:6:4","type":""}],"src":"6434:99:4"},{"body":{"nodeType":"YulBlock","src":"6625:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6642:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"6647:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6635:6:4"},"nodeType":"YulFunctionCall","src":"6635:19:4"},"nodeType":"YulExpressionStatement","src":"6635:19:4"},{"nodeType":"YulAssignment","src":"6663:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6682:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6687:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6678:3:4"},"nodeType":"YulFunctionCall","src":"6678:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6663:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6597:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"6602:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6613:11:4","type":""}],"src":"6539:159:4"},{"body":{"nodeType":"YulBlock","src":"6800:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6817:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"6822:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6810:6:4"},"nodeType":"YulFunctionCall","src":"6810:19:4"},"nodeType":"YulExpressionStatement","src":"6810:19:4"},{"nodeType":"YulAssignment","src":"6838:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6857:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6862:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6853:3:4"},"nodeType":"YulFunctionCall","src":"6853:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6838:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6772:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"6777:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6788:11:4","type":""}],"src":"6704:169:4"},{"body":{"nodeType":"YulBlock","src":"6924:51:4","statements":[{"nodeType":"YulAssignment","src":"6934:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6963:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"6945:17:4"},"nodeType":"YulFunctionCall","src":"6945:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6934:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6906:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6916:7:4","type":""}],"src":"6879:96:4"},{"body":{"nodeType":"YulBlock","src":"7026:81:4","statements":[{"nodeType":"YulAssignment","src":"7036:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7051:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"7058:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7047:3:4"},"nodeType":"YulFunctionCall","src":"7047:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7036:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7008:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7018:7:4","type":""}],"src":"6981:126:4"},{"body":{"nodeType":"YulBlock","src":"7158:32:4","statements":[{"nodeType":"YulAssignment","src":"7168:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"7179:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7168:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7140:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7150:7:4","type":""}],"src":"7113:77:4"},{"body":{"nodeType":"YulBlock","src":"7247:103:4","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7270:3:4"},{"name":"src","nodeType":"YulIdentifier","src":"7275:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"7280:6:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7257:12:4"},"nodeType":"YulFunctionCall","src":"7257:30:4"},"nodeType":"YulExpressionStatement","src":"7257:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7328:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"7333:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7324:3:4"},"nodeType":"YulFunctionCall","src":"7324:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"7342:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7317:6:4"},"nodeType":"YulFunctionCall","src":"7317:27:4"},"nodeType":"YulExpressionStatement","src":"7317:27:4"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7229:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7234:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"7239:6:4","type":""}],"src":"7196:154:4"},{"body":{"nodeType":"YulBlock","src":"7405:258:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7415:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"7424:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7419:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"7484:63:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7509:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"7514:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7505:3:4"},"nodeType":"YulFunctionCall","src":"7505:11:4"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7528:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"7533:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7524:3:4"},"nodeType":"YulFunctionCall","src":"7524:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7518:5:4"},"nodeType":"YulFunctionCall","src":"7518:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7498:6:4"},"nodeType":"YulFunctionCall","src":"7498:39:4"},"nodeType":"YulExpressionStatement","src":"7498:39:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7445:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"7448:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7442:2:4"},"nodeType":"YulFunctionCall","src":"7442:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7456:19:4","statements":[{"nodeType":"YulAssignment","src":"7458:15:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7467:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"7470:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7463:3:4"},"nodeType":"YulFunctionCall","src":"7463:10:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7458:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"7438:3:4","statements":[]},"src":"7434:113:4"},{"body":{"nodeType":"YulBlock","src":"7581:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7631:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"7636:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7627:3:4"},"nodeType":"YulFunctionCall","src":"7627:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"7645:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7620:6:4"},"nodeType":"YulFunctionCall","src":"7620:27:4"},"nodeType":"YulExpressionStatement","src":"7620:27:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7562:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"7565:6:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7559:2:4"},"nodeType":"YulFunctionCall","src":"7559:13:4"},"nodeType":"YulIf","src":"7556:101:4"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7387:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7392:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"7397:6:4","type":""}],"src":"7356:307:4"},{"body":{"nodeType":"YulBlock","src":"7720:269:4","statements":[{"nodeType":"YulAssignment","src":"7730:22:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7744:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"7750:1:4","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7740:3:4"},"nodeType":"YulFunctionCall","src":"7740:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7730:6:4"}]},{"nodeType":"YulVariableDeclaration","src":"7761:38:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7791:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"7797:1:4","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7787:3:4"},"nodeType":"YulFunctionCall","src":"7787:12:4"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7765:18:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"7838:51:4","statements":[{"nodeType":"YulAssignment","src":"7852:27:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7866:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"7874:4:4","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7862:3:4"},"nodeType":"YulFunctionCall","src":"7862:17:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7852:6:4"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7818:18:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7811:6:4"},"nodeType":"YulFunctionCall","src":"7811:26:4"},"nodeType":"YulIf","src":"7808:81:4"},{"body":{"nodeType":"YulBlock","src":"7941:42:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7955:16:4"},"nodeType":"YulFunctionCall","src":"7955:18:4"},"nodeType":"YulExpressionStatement","src":"7955:18:4"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7905:18:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7928:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"7936:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7925:2:4"},"nodeType":"YulFunctionCall","src":"7925:14:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7902:2:4"},"nodeType":"YulFunctionCall","src":"7902:38:4"},"nodeType":"YulIf","src":"7899:84:4"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7704:4:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7713:6:4","type":""}],"src":"7669:320:4"},{"body":{"nodeType":"YulBlock","src":"8038:238:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8048:58:4","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8070:6:4"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8100:4:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8078:21:4"},"nodeType":"YulFunctionCall","src":"8078:27:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8066:3:4"},"nodeType":"YulFunctionCall","src":"8066:40:4"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"8052:10:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"8217:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8219:16:4"},"nodeType":"YulFunctionCall","src":"8219:18:4"},"nodeType":"YulExpressionStatement","src":"8219:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8160:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"8172:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8157:2:4"},"nodeType":"YulFunctionCall","src":"8157:34:4"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8196:10:4"},{"name":"memPtr","nodeType":"YulIdentifier","src":"8208:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8193:2:4"},"nodeType":"YulFunctionCall","src":"8193:22:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8154:2:4"},"nodeType":"YulFunctionCall","src":"8154:62:4"},"nodeType":"YulIf","src":"8151:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8255:2:4","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"8259:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8248:6:4"},"nodeType":"YulFunctionCall","src":"8248:22:4"},"nodeType":"YulExpressionStatement","src":"8248:22:4"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8024:6:4","type":""},{"name":"size","nodeType":"YulTypedName","src":"8032:4:4","type":""}],"src":"7995:281:4"},{"body":{"nodeType":"YulBlock","src":"8310:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8327:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8330:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8320:6:4"},"nodeType":"YulFunctionCall","src":"8320:88:4"},"nodeType":"YulExpressionStatement","src":"8320:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8424:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8427:4:4","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8417:6:4"},"nodeType":"YulFunctionCall","src":"8417:15:4"},"nodeType":"YulExpressionStatement","src":"8417:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8448:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8451:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8441:6:4"},"nodeType":"YulFunctionCall","src":"8441:15:4"},"nodeType":"YulExpressionStatement","src":"8441:15:4"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8282:180:4"},{"body":{"nodeType":"YulBlock","src":"8496:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8513:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8516:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8506:6:4"},"nodeType":"YulFunctionCall","src":"8506:88:4"},"nodeType":"YulExpressionStatement","src":"8506:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8610:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8613:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8603:6:4"},"nodeType":"YulFunctionCall","src":"8603:15:4"},"nodeType":"YulExpressionStatement","src":"8603:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8634:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8637:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8627:6:4"},"nodeType":"YulFunctionCall","src":"8627:15:4"},"nodeType":"YulExpressionStatement","src":"8627:15:4"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8468:180:4"},{"body":{"nodeType":"YulBlock","src":"8743:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8760:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8763:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8753:6:4"},"nodeType":"YulFunctionCall","src":"8753:12:4"},"nodeType":"YulExpressionStatement","src":"8753:12:4"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8654:117:4"},{"body":{"nodeType":"YulBlock","src":"8866:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8883:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8886:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8876:6:4"},"nodeType":"YulFunctionCall","src":"8876:12:4"},"nodeType":"YulExpressionStatement","src":"8876:12:4"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8777:117:4"},{"body":{"nodeType":"YulBlock","src":"8989:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9006:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9009:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8999:6:4"},"nodeType":"YulFunctionCall","src":"8999:12:4"},"nodeType":"YulExpressionStatement","src":"8999:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"8900:117:4"},{"body":{"nodeType":"YulBlock","src":"9112:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9129:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9132:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9122:6:4"},"nodeType":"YulFunctionCall","src":"9122:12:4"},"nodeType":"YulExpressionStatement","src":"9122:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"9023:117:4"},{"body":{"nodeType":"YulBlock","src":"9194:54:4","statements":[{"nodeType":"YulAssignment","src":"9204:38:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9222:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9229:2:4","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9218:3:4"},"nodeType":"YulFunctionCall","src":"9218:14:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9238:2:4","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9234:3:4"},"nodeType":"YulFunctionCall","src":"9234:7:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9214:3:4"},"nodeType":"YulFunctionCall","src":"9214:28:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9204:6:4"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9177:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9187:6:4","type":""}],"src":"9146:102:4"},{"body":{"nodeType":"YulBlock","src":"9297:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"9354:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9363:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9366:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9356:6:4"},"nodeType":"YulFunctionCall","src":"9356:12:4"},"nodeType":"YulExpressionStatement","src":"9356:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9320:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9345:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9327:17:4"},"nodeType":"YulFunctionCall","src":"9327:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9317:2:4"},"nodeType":"YulFunctionCall","src":"9317:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9310:6:4"},"nodeType":"YulFunctionCall","src":"9310:43:4"},"nodeType":"YulIf","src":"9307:63:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9290:5:4","type":""}],"src":"9254:122:4"},{"body":{"nodeType":"YulBlock","src":"9425:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"9482:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9491:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9494:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9484:6:4"},"nodeType":"YulFunctionCall","src":"9484:12:4"},"nodeType":"YulExpressionStatement","src":"9484:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9448:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9473:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9455:17:4"},"nodeType":"YulFunctionCall","src":"9455:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9445:2:4"},"nodeType":"YulFunctionCall","src":"9445:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9438:6:4"},"nodeType":"YulFunctionCall","src":"9438:43:4"},"nodeType":"YulIf","src":"9435:63:4"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9418:5:4","type":""}],"src":"9382:122:4"}]},"contents":"{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct DocCollection.Uploading -> struct DocCollection.Uploading\n    function abi_encode_t_struct$_Uploading_$188_memory_ptr_to_t_struct$_Uploading_$188_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Uploading_$188_memory_ptr__to_t_struct$_Uploading_$188_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Uploading_$188_memory_ptr_to_t_struct$_Uploading_$188_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806322b6a53c14610046578063287911c314610062578063ef353be514610092575b600080fd5b610060600480360381019061005b9190610aef565b6100ae565b005b61007c60048036038101906100779190610aaf565b6103ed565b6040516100899190610c85565b60405180910390f35b6100ac60048036038101906100a79190610aaf565b610540565b005b828233600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016100f19190610ca7565b60206040518083038186803b15801561010957600080fd5b505afa15801561011d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101419190610a82565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146101a8576040517f8d5f03a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008890503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8a6040518263ffffffff1660e01b81526004016101fd9190610ca7565b60206040518083038186803b15801561021557600080fd5b505afa158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d9190610a82565b73ffffffffffffffffffffffffffffffffffffffff161461029a576040517f8ae97c5800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808881526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a815260200190815260200160002060008201518160000190805190602001906103319291906108c0565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050878973ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8a818403715070228869f2cfb3873b19aca8cc7f709f034456869ce265ca7cc58a6040516103da9190610c63565b60405180910390a4505050505050505050565b6103f5610946565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201805461046090610dc3565b80601f016020809104026020016040519081016040528092919081815260200182805461048c90610dc3565b80156104d95780601f106104ae576101008083540402835291602001916104d9565b820191906000526020600020905b8154815290600101906020018083116104bc57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016105839190610ca7565b60206040518083038186803b15801561059b57600080fd5b505afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d39190610a82565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461063a576040517f8d5f03a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206040518060400160405290816000820180546106a990610dc3565b80601f01602080910402602001604051908101604052809291908181526020018280546106d590610dc3565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015151116107cf5782826040517f5cf227200000000000000000000000000000000000000000000000000000000081526004016107c6929190610c3a565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600080820160006108309190610976565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fba87561d6b48f7f2d1c501299e086802efef782b0caf38c25ea323e023e62ccb60405160405180910390a450505050505050505050565b8280546108cc90610dc3565b90600052602060002090601f0160209004810192826108ee5760008555610935565b82601f1061090757805160ff1916838001178555610935565b82800160010185558215610935579182015b82811115610934578251825591602001919060010190610919565b5b50905061094291906109b6565b5090565b604051806040016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b50805461098290610dc3565b6000825580601f1061099457506109b3565b601f0160209004906000526020600020908101906109b291906109b6565b5b50565b5b808211156109cf5760008160009055506001016109b7565b5090565b60006109e66109e184610ce7565b610cc2565b905082815260208101848484011115610a0257610a01610e89565b5b610a0d848285610d81565b509392505050565b600081359050610a2481610ea9565b92915050565b600081519050610a3981610ea9565b92915050565b600082601f830112610a5457610a53610e84565b5b8135610a648482602086016109d3565b91505092915050565b600081359050610a7c81610ec0565b92915050565b600060208284031215610a9857610a97610e93565b5b6000610aa684828501610a2a565b91505092915050565b60008060408385031215610ac657610ac5610e93565b5b6000610ad485828601610a15565b9250506020610ae585828601610a6d565b9150509250929050565b600080600060608486031215610b0857610b07610e93565b5b6000610b1686828701610a15565b9350506020610b2786828701610a6d565b925050604084013567ffffffffffffffff811115610b4857610b47610e8e565b5b610b5486828701610a3f565b9150509250925092565b610b6781610d45565b82525050565b610b7681610d45565b82525050565b6000610b8782610d18565b610b918185610d23565b9350610ba1818560208601610d90565b610baa81610e98565b840191505092915050565b6000610bc082610d18565b610bca8185610d34565b9350610bda818560208601610d90565b610be381610e98565b840191505092915050565b60006040830160008301518482036000860152610c0b8282610b7c565b9150506020830151610c206020860182610b5e565b508091505092915050565b610c3481610d77565b82525050565b6000604082019050610c4f6000830185610b6d565b610c5c6020830184610c2b565b9392505050565b60006020820190508181036000830152610c7d8184610bb5565b905092915050565b60006020820190508181036000830152610c9f8184610bee565b905092915050565b6000602082019050610cbc6000830184610c2b565b92915050565b6000610ccc610cdd565b9050610cd88282610df5565b919050565b6000604051905090565b600067ffffffffffffffff821115610d0257610d01610e55565b5b610d0b82610e98565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d5082610d57565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610dae578082015181840152602081019050610d93565b83811115610dbd576000848401525b50505050565b60006002820490506001821680610ddb57607f821691505b60208210811415610def57610dee610e26565b5b50919050565b610dfe82610e98565b810181811067ffffffffffffffff82111715610e1d57610e1c610e55565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610eb281610d45565b8114610ebd57600080fd5b50565b610ec981610d77565b8114610ed457600080fd5b5056fea26469706673582212204f1034a594465a78956f11b68196c6dbba9a76e24e08d8d9522699dbe790939e64736f6c63430008070033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x22B6A53C EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x287911C3 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xEF353BE5 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0xAE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x89 SWAP2 SWAP1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA7 SWAP2 SWAP1 PUSH2 0xAAF JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D5F03A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x29A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8AE97C5800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x331 SWAP3 SWAP2 SWAP1 PUSH2 0x8C0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A818403715070228869F2CFB3873B19ACA8CC7F709F034456869CE265CA7CC5 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3F5 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x460 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48C SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D5F03A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x6A9 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D5 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x722 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x722 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x705 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD MLOAD GT PUSH2 0x7CF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x5CF2272000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C6 SWAP3 SWAP2 SWAP1 PUSH2 0xC3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x976 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA87561D6B48F7F2D1C501299E086802EFEF782B0CAF38C25EA323E023E62CCB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x8CC SWAP1 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x8EE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x935 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x907 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x935 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x935 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x934 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x919 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x982 SWAP1 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x994 JUMPI POP PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x9B6 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9CF JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x9B7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E6 PUSH2 0x9E1 DUP5 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0xCC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA02 JUMPI PUSH2 0xA01 PUSH2 0xE89 JUMP JUMPDEST JUMPDEST PUSH2 0xA0D DUP5 DUP3 DUP6 PUSH2 0xD81 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA24 DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA39 DUP2 PUSH2 0xEA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA54 JUMPI PUSH2 0xA53 PUSH2 0xE84 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA64 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA7C DUP2 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA98 JUMPI PUSH2 0xA97 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAA6 DUP5 DUP3 DUP6 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC6 JUMPI PUSH2 0xAC5 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAD4 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE5 DUP6 DUP3 DUP7 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB08 JUMPI PUSH2 0xB07 PUSH2 0xE93 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB16 DUP7 DUP3 DUP8 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB27 DUP7 DUP3 DUP8 ADD PUSH2 0xA6D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0xE8E JUMP JUMPDEST JUMPDEST PUSH2 0xB54 DUP7 DUP3 DUP8 ADD PUSH2 0xA3F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0xB67 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB87 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xB91 DUP2 DUP6 PUSH2 0xD23 JUMP JUMPDEST SWAP4 POP PUSH2 0xBA1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC0 DUP3 PUSH2 0xD18 JUMP JUMPDEST PUSH2 0xBCA DUP2 DUP6 PUSH2 0xD34 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xE98 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0xC0B DUP3 DUP3 PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xC20 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xB5E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC34 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0xC5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC7D DUP2 DUP5 PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCC PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP PUSH2 0xCD8 DUP3 DUP3 PUSH2 0xDF5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD02 JUMPI PUSH2 0xD01 PUSH2 0xE55 JUMP JUMPDEST JUMPDEST PUSH2 0xD0B DUP3 PUSH2 0xE98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP3 PUSH2 0xD57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDAE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD93 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDDB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xE26 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDFE DUP3 PUSH2 0xE98 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xE1D JUMPI PUSH2 0xE1C PUSH2 0xE55 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEB2 DUP2 PUSH2 0xD45 JUMP JUMPDEST DUP2 EQ PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEC9 DUP2 PUSH2 0xD77 JUMP JUMPDEST DUP2 EQ PUSH2 0xED4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F LT CALLVALUE 0xA5 SWAP5 CHAINID GAS PUSH25 0x956F11B68196C6DBBA9A76E24E08D8D9522699DBE790939E64 PUSH20 0x6F6C634300080700330000000000000000000000 ","sourceMap":"332:2050:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:473;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2200:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1909:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1430:473;1554:10;1566:7;1575:10;1167:11;1189:10;1167:33;;1210:13;1226:3;:11;;;1238:7;1226:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1210:36;;1271:5;1260:16;;:7;:16;;;1256:78;;1299:24;;;;;;;;;;;;;;1256:78;1597:11:::1;1619:10;1597:33;;1680:4;1644:41;;:3;:15;;;1660:7;1644:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;1640:120;;1708:41;;;;;;;;;;;;;;1640:120;1802:28;;;;;;;;1812:5;1802:28;;;;1819:10;1802:28;;;;::::0;1769:9:::1;:21;1779:10;1769:21;;;;;;;;;;;;;;;:30;1791:7;1769:30;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1881:7;1869:10;1845:51;;1857:10;1845:51;;;1890:5;1845:51;;;;;;:::i;:::-;;;;;;;;1587:316;1157:194:::0;;1430:473;;;;;;:::o;2200:180::-;2304:16;;:::i;:::-;2343:9;:21;2353:10;2343:21;;;;;;;;;;;;;;;:30;2365:7;2343:30;;;;;;;;;;;2336:37;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:180;;;;:::o;1909:285::-;2003:10;2015:7;2024:10;1167:11;1189:10;1167:33;;1210:13;1226:3;:11;;;1238:7;1226:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1210:36;;1271:5;1260:16;;:7;:16;;;1256:78;;1299:24;;;;;;;;;;;;;;1256:78;2055:10:::1;2067:7;846:26;875:9;:21;885:10;875:21;;;;;;;;;;;;;;;:30;897:7;875:30;;;;;;;;;;;846:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;952:1;925:9;:15;;;919:29;:34;915:118;;1002:10;1014:7;976:46;;;;;;;;;;;;:::i;:::-;;;;;;;;915:118;2098:9:::2;:21;2108:10;2098:21;;;;;;;;;;;;;;;:30;2120:7;2098:30;;;;;;;;;;;;2090:39:::0;::::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2179:7;2167:10;2144:43;;2155:10;2144:43;;;;;;;;;;;;836:214:::1;1343:1;;1157:194:::0;;1909:285;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:412:4:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;570:143::-;627:5;658:6;652:13;643:22;;674:33;701:5;674:33;:::i;:::-;570:143;;;;:::o;733:340::-;789:5;838:3;831:4;823:6;819:17;815:27;805:122;;846:79;;:::i;:::-;805:122;963:6;950:20;988:79;1063:3;1055:6;1048:4;1040:6;1036:17;988:79;:::i;:::-;979:88;;795:278;733:340;;;;:::o;1079:139::-;1125:5;1163:6;1150:20;1141:29;;1179:33;1206:5;1179:33;:::i;:::-;1079:139;;;;:::o;1224:351::-;1294:6;1343:2;1331:9;1322:7;1318:23;1314:32;1311:119;;;1349:79;;:::i;:::-;1311:119;1469:1;1494:64;1550:7;1541:6;1530:9;1526:22;1494:64;:::i;:::-;1484:74;;1440:128;1224:351;;;;:::o;1581:474::-;1649:6;1657;1706:2;1694:9;1685:7;1681:23;1677:32;1674:119;;;1712:79;;:::i;:::-;1674:119;1832:1;1857:53;1902:7;1893:6;1882:9;1878:22;1857:53;:::i;:::-;1847:63;;1803:117;1959:2;1985:53;2030:7;2021:6;2010:9;2006:22;1985:53;:::i;:::-;1975:63;;1930:118;1581:474;;;;;:::o;2061:799::-;2148:6;2156;2164;2213:2;2201:9;2192:7;2188:23;2184:32;2181:119;;;2219:79;;:::i;:::-;2181:119;2339:1;2364:53;2409:7;2400:6;2389:9;2385:22;2364:53;:::i;:::-;2354:63;;2310:117;2466:2;2492:53;2537:7;2528:6;2517:9;2513:22;2492:53;:::i;:::-;2482:63;;2437:118;2622:2;2611:9;2607:18;2594:32;2653:18;2645:6;2642:30;2639:117;;;2675:79;;:::i;:::-;2639:117;2780:63;2835:7;2826:6;2815:9;2811:22;2780:63;:::i;:::-;2770:73;;2565:288;2061:799;;;;;:::o;2866:108::-;2943:24;2961:5;2943:24;:::i;:::-;2938:3;2931:37;2866:108;;:::o;2980:118::-;3067:24;3085:5;3067:24;:::i;:::-;3062:3;3055:37;2980:118;;:::o;3104:344::-;3182:3;3210:39;3243:5;3210:39;:::i;:::-;3265:61;3319:6;3314:3;3265:61;:::i;:::-;3258:68;;3335:52;3380:6;3375:3;3368:4;3361:5;3357:16;3335:52;:::i;:::-;3412:29;3434:6;3412:29;:::i;:::-;3407:3;3403:39;3396:46;;3186:262;3104:344;;;;:::o;3454:364::-;3542:3;3570:39;3603:5;3570:39;:::i;:::-;3625:71;3689:6;3684:3;3625:71;:::i;:::-;3618:78;;3705:52;3750:6;3745:3;3738:4;3731:5;3727:16;3705:52;:::i;:::-;3782:29;3804:6;3782:29;:::i;:::-;3777:3;3773:39;3766:46;;3546:272;3454:364;;;;:::o;3896:610::-;4017:3;4053:4;4048:3;4044:14;4141:4;4134:5;4130:16;4124:23;4194:3;4188:4;4184:14;4177:4;4172:3;4168:14;4161:38;4220:73;4288:4;4274:12;4220:73;:::i;:::-;4212:81;;4068:236;4387:4;4380:5;4376:16;4370:23;4406:63;4463:4;4458:3;4454:14;4440:12;4406:63;:::i;:::-;4314:165;4496:4;4489:11;;4022:484;3896:610;;;;:::o;4512:118::-;4599:24;4617:5;4599:24;:::i;:::-;4594:3;4587:37;4512:118;;:::o;4636:332::-;4757:4;4795:2;4784:9;4780:18;4772:26;;4808:71;4876:1;4865:9;4861:17;4852:6;4808:71;:::i;:::-;4889:72;4957:2;4946:9;4942:18;4933:6;4889:72;:::i;:::-;4636:332;;;;;:::o;4974:313::-;5087:4;5125:2;5114:9;5110:18;5102:26;;5174:9;5168:4;5164:20;5160:1;5149:9;5145:17;5138:47;5202:78;5275:4;5266:6;5202:78;:::i;:::-;5194:86;;4974:313;;;;:::o;5293:377::-;5438:4;5476:2;5465:9;5461:18;5453:26;;5525:9;5519:4;5515:20;5511:1;5500:9;5496:17;5489:47;5553:110;5658:4;5649:6;5553:110;:::i;:::-;5545:118;;5293:377;;;;:::o;5676:222::-;5769:4;5807:2;5796:9;5792:18;5784:26;;5820:71;5888:1;5877:9;5873:17;5864:6;5820:71;:::i;:::-;5676:222;;;;:::o;5904:129::-;5938:6;5965:20;;:::i;:::-;5955:30;;5994:33;6022:4;6014:6;5994:33;:::i;:::-;5904:129;;;:::o;6039:75::-;6072:6;6105:2;6099:9;6089:19;;6039:75;:::o;6120:308::-;6182:4;6272:18;6264:6;6261:30;6258:56;;;6294:18;;:::i;:::-;6258:56;6332:29;6354:6;6332:29;:::i;:::-;6324:37;;6416:4;6410;6406:15;6398:23;;6120:308;;;:::o;6434:99::-;6486:6;6520:5;6514:12;6504:22;;6434:99;;;:::o;6539:159::-;6613:11;6647:6;6642:3;6635:19;6687:4;6682:3;6678:14;6663:29;;6539:159;;;;:::o;6704:169::-;6788:11;6822:6;6817:3;6810:19;6862:4;6857:3;6853:14;6838:29;;6704:169;;;;:::o;6879:96::-;6916:7;6945:24;6963:5;6945:24;:::i;:::-;6934:35;;6879:96;;;:::o;6981:126::-;7018:7;7058:42;7051:5;7047:54;7036:65;;6981:126;;;:::o;7113:77::-;7150:7;7179:5;7168:16;;7113:77;;;:::o;7196:154::-;7280:6;7275:3;7270;7257:30;7342:1;7333:6;7328:3;7324:16;7317:27;7196:154;;;:::o;7356:307::-;7424:1;7434:113;7448:6;7445:1;7442:13;7434:113;;;7533:1;7528:3;7524:11;7518:18;7514:1;7509:3;7505:11;7498:39;7470:2;7467:1;7463:10;7458:15;;7434:113;;;7565:6;7562:1;7559:13;7556:101;;;7645:1;7636:6;7631:3;7627:16;7620:27;7556:101;7405:258;7356:307;;;:::o;7669:320::-;7713:6;7750:1;7744:4;7740:12;7730:22;;7797:1;7791:4;7787:12;7818:18;7808:81;;7874:4;7866:6;7862:17;7852:27;;7808:81;7936:2;7928:6;7925:14;7905:18;7902:38;7899:84;;;7955:18;;:::i;:::-;7899:84;7720:269;7669:320;;;:::o;7995:281::-;8078:27;8100:4;8078:27;:::i;:::-;8070:6;8066:40;8208:6;8196:10;8193:22;8172:18;8160:10;8157:34;8154:62;8151:88;;;8219:18;;:::i;:::-;8151:88;8259:10;8255:2;8248:22;8038:238;7995:281;;:::o;8282:180::-;8330:77;8327:1;8320:88;8427:4;8424:1;8417:15;8451:4;8448:1;8441:15;8468:180;8516:77;8513:1;8506:88;8613:4;8610:1;8603:15;8637:4;8634:1;8627:15;8654:117;8763:1;8760;8753:12;8777:117;8886:1;8883;8876:12;8900:117;9009:1;9006;8999:12;9023:117;9132:1;9129;9122:12;9146:102;9187:6;9238:2;9234:7;9229:2;9222:5;9218:14;9214:28;9204:38;;9146:102;;;:::o;9254:122::-;9327:24;9345:5;9327:24;:::i;:::-;9320:5;9317:35;9307:63;;9366:1;9363;9356:12;9307:63;9254:122;:::o;9382:::-;9455:24;9473:5;9455:24;:::i;:::-;9448:5;9445:35;9435:63;;9494:1;9491;9484:12;9435:63;9382:122;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"770600","executionCost":"22919","totalCost":"793519"},"external":{"deleteDocument(address,uint256)":"infinite","getUploads(address,uint256)":"infinite","uploadDoc(address,uint256,string)":"infinite"}},"methodIdentifiers":{"deleteDocument(address,uint256)":"ef353be5","getUploads(address,uint256)":"287911c3","uploadDoc(address,uint256,string)":"22b6a53c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DocCollection_NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DocCollection_NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DocCollection_NotUploaded\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DocDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"DocUploaded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getUploads\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"internalType\":\"struct DocCollection.Uploading\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"docAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"name\":\"uploadDoc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uploadDoc(address,uint256,string)\":{\"notice\":\"main function///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DocCollection.sol\":\"DocCollection\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/DocCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\nerror DocCollection_NotApprovedForMarketplace();\\nerror DocCollection_NotOwner();\\nerror DocCollection_NotUploaded(address docAddress, uint256 tokenId);\\n\\ncontract DocCollection is ReentrancyGuard {\\n    struct Uploading {\\n        string title;\\n        address owner;\\n    }\\n    mapping(address => mapping(uint256 => Uploading)) private s_uploads;\\n\\n    event DocDeleted(address indexed owner, address indexed docAddress, uint256 indexed tokenId);\\n\\n    event DocUploaded(\\n        address indexed owner,\\n        address indexed docAddress,\\n        uint256 indexed tokenId,\\n        string title\\n    );\\n\\n    modifier isUploaded(address docAddress, uint256 tokenId) {\\n        Uploading memory uploading = s_uploads[docAddress][tokenId];\\n        if (bytes(uploading.title).length <= 0) {\\n            revert DocCollection_NotUploaded(docAddress, tokenId);\\n        }\\n        _;\\n    }\\n\\n    modifier isOwner(\\n        address docAddress,\\n        uint256 tokenId,\\n        address spender\\n    ) {\\n        IERC721 doc = IERC721(docAddress);\\n        address owner = doc.ownerOf(tokenId);\\n        if (spender != owner) {\\n            revert DocCollection_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    ///////////////////\\n    ///main function///\\n    ///////////////////\\n\\n    function uploadDoc(\\n        address docAddress,\\n        uint256 tokenId,\\n        string memory title\\n    ) external isOwner(docAddress, tokenId, msg.sender) {\\n        IERC721 doc = IERC721(docAddress);\\n        if (doc.getApproved(tokenId) != address(this)) {\\n            revert DocCollection_NotApprovedForMarketplace();\\n        }\\n        s_uploads[docAddress][tokenId] = Uploading(title, msg.sender);\\n        emit DocUploaded(msg.sender, docAddress, tokenId, title);\\n    }\\n\\n    function deleteDocument(address docAddress, uint256 tokenId)\\n        external\\n        isOwner(docAddress, tokenId, msg.sender)\\n        isUploaded(docAddress, tokenId)\\n    {\\n        delete (s_uploads[docAddress][tokenId]);\\n        emit DocDeleted(msg.sender, docAddress, tokenId);\\n    }\\n\\n    function getUploads(address docAddress, uint256 tokenId)\\n        external\\n        view\\n        returns (Uploading memory)\\n    {\\n        return s_uploads[docAddress][tokenId];\\n    }\\n}\\n\",\"keccak256\":\"0x7aaf0387261e536c71a0da90f890ef01b583bc3fc46102f9bdcecc8c6f5dbd1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/DocCollection.sol:DocCollection","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":195,"contract":"contracts/DocCollection.sol:DocCollection","label":"s_uploads","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Uploading)188_storage))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Uploading)188_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct DocCollection.Uploading))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Uploading)188_storage)"},"t_mapping(t_uint256,t_struct(Uploading)188_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DocCollection.Uploading)","numberOfBytes":"32","value":"t_struct(Uploading)188_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Uploading)188_storage":{"encoding":"inplace","label":"struct DocCollection.Uploading","members":[{"astId":185,"contract":"contracts/DocCollection.sol:DocCollection","label":"title","offset":0,"slot":"0","type":"t_string_storage"},{"astId":187,"contract":"contracts/DocCollection.sol:DocCollection","label":"owner","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"uploadDoc(address,uint256,string)":{"notice":"main function///"}},"version":1}}}}}}